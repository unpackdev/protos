// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: addresses/addresses.proto

package addresses

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	common "github.com/unpackdev/protos/dist/go/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MaliciousAddressReasons int32

const (
	MaliciousAddressReasons_MAR_NONE                         MaliciousAddressReasons = 0
	MaliciousAddressReasons_MAR_CONTRACT_DEPLOYMENT_FRAUD    MaliciousAddressReasons = 1
	MaliciousAddressReasons_MAR_TRANSFER_TO_MALICIOUS_ADDR   MaliciousAddressReasons = 2
	MaliciousAddressReasons_MAR_TRANSFER_FROM_MALICIOUS_ADDR MaliciousAddressReasons = 3
)

// Enum value maps for MaliciousAddressReasons.
var (
	MaliciousAddressReasons_name = map[int32]string{
		0: "MAR_NONE",
		1: "MAR_CONTRACT_DEPLOYMENT_FRAUD",
		2: "MAR_TRANSFER_TO_MALICIOUS_ADDR",
		3: "MAR_TRANSFER_FROM_MALICIOUS_ADDR",
	}
	MaliciousAddressReasons_value = map[string]int32{
		"MAR_NONE":                         0,
		"MAR_CONTRACT_DEPLOYMENT_FRAUD":    1,
		"MAR_TRANSFER_TO_MALICIOUS_ADDR":   2,
		"MAR_TRANSFER_FROM_MALICIOUS_ADDR": 3,
	}
)

func (x MaliciousAddressReasons) Enum() *MaliciousAddressReasons {
	p := new(MaliciousAddressReasons)
	*p = x
	return p
}

func (x MaliciousAddressReasons) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaliciousAddressReasons) Descriptor() protoreflect.EnumDescriptor {
	return file_addresses_addresses_proto_enumTypes[0].Descriptor()
}

func (MaliciousAddressReasons) Type() protoreflect.EnumType {
	return &file_addresses_addresses_proto_enumTypes[0]
}

func (x MaliciousAddressReasons) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaliciousAddressReasons.Descriptor instead.
func (MaliciousAddressReasons) EnumDescriptor() ([]byte, []int) {
	return file_addresses_addresses_proto_rawDescGZIP(), []int{0}
}

type AddressStatus int32

const (
	AddressStatus_AS_NONE       AddressStatus = 0
	AddressStatus_AS_QUEUED     AddressStatus = 1
	AddressStatus_AS_PROCESSING AddressStatus = 2
	AddressStatus_AS_PROCESSED  AddressStatus = 3
)

// Enum value maps for AddressStatus.
var (
	AddressStatus_name = map[int32]string{
		0: "AS_NONE",
		1: "AS_QUEUED",
		2: "AS_PROCESSING",
		3: "AS_PROCESSED",
	}
	AddressStatus_value = map[string]int32{
		"AS_NONE":       0,
		"AS_QUEUED":     1,
		"AS_PROCESSING": 2,
		"AS_PROCESSED":  3,
	}
)

func (x AddressStatus) Enum() *AddressStatus {
	p := new(AddressStatus)
	*p = x
	return p
}

func (x AddressStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddressStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_addresses_addresses_proto_enumTypes[1].Descriptor()
}

func (AddressStatus) Type() protoreflect.EnumType {
	return &file_addresses_addresses_proto_enumTypes[1]
}

func (x AddressStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddressStatus.Descriptor instead.
func (AddressStatus) EnumDescriptor() ([]byte, []int) {
	return file_addresses_addresses_proto_rawDescGZIP(), []int{1}
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      uint64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChainId                 uint64                  `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Address                 string                  `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	FirstTransaction        uint64                  `protobuf:"varint,4,opt,name=first_transaction,json=firstTransaction,proto3" json:"first_transaction,omitempty"`
	Malicious               bool                    `protobuf:"varint,5,opt,name=malicious,proto3" json:"malicious,omitempty"`
	MaliciousReason         MaliciousAddressReasons `protobuf:"varint,6,opt,name=malicious_reason,json=maliciousReason,proto3,enum=txpull.v1.addresses.MaliciousAddressReasons" json:"malicious_reason,omitempty"`
	MaliciousReasonDetails  string                  `protobuf:"bytes,7,opt,name=malicious_reason_details,json=maliciousReasonDetails,proto3" json:"malicious_reason_details,omitempty"`
	Status                  AddressStatus           `protobuf:"varint,8,opt,name=status,proto3,enum=txpull.v1.addresses.AddressStatus" json:"status,omitempty"`
	AvailableSinceTimestamp *timestamp.Timestamp    `protobuf:"bytes,9,opt,name=available_since_timestamp,json=availableSinceTimestamp,proto3" json:"available_since_timestamp,omitempty"`
	QueuedTimestamp         *timestamp.Timestamp    `protobuf:"bytes,10,opt,name=queued_timestamp,json=queuedTimestamp,proto3" json:"queued_timestamp,omitempty"`
	ProcessedTimestamp      *timestamp.Timestamp    `protobuf:"bytes,11,opt,name=processed_timestamp,json=processedTimestamp,proto3" json:"processed_timestamp,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addresses_addresses_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_addresses_addresses_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_addresses_addresses_proto_rawDescGZIP(), []int{0}
}

func (x *Address) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Address) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Address) GetFirstTransaction() uint64 {
	if x != nil {
		return x.FirstTransaction
	}
	return 0
}

func (x *Address) GetMalicious() bool {
	if x != nil {
		return x.Malicious
	}
	return false
}

func (x *Address) GetMaliciousReason() MaliciousAddressReasons {
	if x != nil {
		return x.MaliciousReason
	}
	return MaliciousAddressReasons_MAR_NONE
}

func (x *Address) GetMaliciousReasonDetails() string {
	if x != nil {
		return x.MaliciousReasonDetails
	}
	return ""
}

func (x *Address) GetStatus() AddressStatus {
	if x != nil {
		return x.Status
	}
	return AddressStatus_AS_NONE
}

func (x *Address) GetAvailableSinceTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.AvailableSinceTimestamp
	}
	return nil
}

func (x *Address) GetQueuedTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.QueuedTimestamp
	}
	return nil
}

func (x *Address) GetProcessedTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.ProcessedTimestamp
	}
	return nil
}

type FilterAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          *common.Status          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Malicious       bool                    `protobuf:"varint,2,opt,name=malicious,proto3" json:"malicious,omitempty"`
	MaliciousReason MaliciousAddressReasons `protobuf:"varint,6,opt,name=malicious_reason,json=maliciousReason,proto3,enum=txpull.v1.addresses.MaliciousAddressReasons" json:"malicious_reason,omitempty"`
}

func (x *FilterAddressRequest) Reset() {
	*x = FilterAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addresses_addresses_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterAddressRequest) ProtoMessage() {}

func (x *FilterAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_addresses_addresses_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterAddressRequest.ProtoReflect.Descriptor instead.
func (*FilterAddressRequest) Descriptor() ([]byte, []int) {
	return file_addresses_addresses_proto_rawDescGZIP(), []int{1}
}

func (x *FilterAddressRequest) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *FilterAddressRequest) GetMalicious() bool {
	if x != nil {
		return x.Malicious
	}
	return false
}

func (x *FilterAddressRequest) GetMaliciousReason() MaliciousAddressReasons {
	if x != nil {
		return x.MaliciousReason
	}
	return MaliciousAddressReasons_MAR_NONE
}

type FilterAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    *common.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Addresses []*Address     `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *FilterAddressResponse) Reset() {
	*x = FilterAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addresses_addresses_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterAddressResponse) ProtoMessage() {}

func (x *FilterAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_addresses_addresses_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterAddressResponse.ProtoReflect.Descriptor instead.
func (*FilterAddressResponse) Descriptor() ([]byte, []int) {
	return file_addresses_addresses_proto_rawDescGZIP(), []int{2}
}

func (x *FilterAddressResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *FilterAddressResponse) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type GetAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId uint64 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAddressRequest) Reset() {
	*x = GetAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addresses_addresses_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressRequest) ProtoMessage() {}

func (x *GetAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_addresses_addresses_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressRequest.ProtoReflect.Descriptor instead.
func (*GetAddressRequest) Descriptor() ([]byte, []int) {
	return file_addresses_addresses_proto_rawDescGZIP(), []int{3}
}

func (x *GetAddressRequest) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *GetAddressRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  *common.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Address *Address       `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAddressResponse) Reset() {
	*x = GetAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addresses_addresses_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressResponse) ProtoMessage() {}

func (x *GetAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_addresses_addresses_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressResponse.ProtoReflect.Descriptor instead.
func (*GetAddressResponse) Descriptor() ([]byte, []int) {
	return file_addresses_addresses_proto_rawDescGZIP(), []int{4}
}

func (x *GetAddressResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetAddressResponse) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

var File_addresses_addresses_proto protoreflect.FileDescriptor

var file_addresses_addresses_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x74, 0x78, 0x70,
	0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x04, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6c, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x61, 0x6c, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73,
	0x12, 0x57, 0x0a, 0x10, 0x6d, 0x61, 0x6c, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x74, 0x78, 0x70,
	0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x2e, 0x4d, 0x61, 0x6c, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x61, 0x6c, 0x69, 0x63, 0x69,
	0x6f, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x18, 0x6d, 0x61, 0x6c,
	0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6d, 0x61, 0x6c,
	0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x56, 0x0a, 0x19, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x6e,
	0x63, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x17,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x4b,
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xbf, 0x01, 0x0a, 0x14,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6c, 0x69, 0x63, 0x69,
	0x6f, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x61, 0x6c, 0x69, 0x63,
	0x69, 0x6f, 0x75, 0x73, 0x12, 0x57, 0x0a, 0x10, 0x6d, 0x61, 0x6c, 0x69, 0x63, 0x69, 0x6f, 0x75,
	0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x6c, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6d, 0x61,
	0x6c, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x85, 0x01,
	0x0a, 0x15, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74,
	0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x58, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x7e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2a,
	0x94, 0x01, 0x0a, 0x17, 0x4d, 0x61, 0x6c, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x4d,
	0x41, 0x52, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x41, 0x52,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x52, 0x41, 0x55, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e,
	0x4d, 0x41, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x5f,
	0x4d, 0x41, 0x4c, 0x49, 0x43, 0x49, 0x4f, 0x55, 0x53, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x10, 0x02,
	0x12, 0x24, 0x0a, 0x20, 0x4d, 0x41, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52,
	0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x4d, 0x41, 0x4c, 0x49, 0x43, 0x49, 0x4f, 0x55, 0x53, 0x5f,
	0x41, 0x44, 0x44, 0x52, 0x10, 0x03, 0x2a, 0x50, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x53, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x53, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53,
	0x53, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x53, 0x5f, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x45, 0x44, 0x10, 0x03, 0x32, 0xf7, 0x01, 0x0a, 0x09, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x76, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x29, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x78,
	0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12,
	0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x72,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x64,
	0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x3b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_addresses_addresses_proto_rawDescOnce sync.Once
	file_addresses_addresses_proto_rawDescData = file_addresses_addresses_proto_rawDesc
)

func file_addresses_addresses_proto_rawDescGZIP() []byte {
	file_addresses_addresses_proto_rawDescOnce.Do(func() {
		file_addresses_addresses_proto_rawDescData = protoimpl.X.CompressGZIP(file_addresses_addresses_proto_rawDescData)
	})
	return file_addresses_addresses_proto_rawDescData
}

var file_addresses_addresses_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_addresses_addresses_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_addresses_addresses_proto_goTypes = []interface{}{
	(MaliciousAddressReasons)(0),  // 0: txpull.v1.addresses.MaliciousAddressReasons
	(AddressStatus)(0),            // 1: txpull.v1.addresses.AddressStatus
	(*Address)(nil),               // 2: txpull.v1.addresses.Address
	(*FilterAddressRequest)(nil),  // 3: txpull.v1.addresses.FilterAddressRequest
	(*FilterAddressResponse)(nil), // 4: txpull.v1.addresses.FilterAddressResponse
	(*GetAddressRequest)(nil),     // 5: txpull.v1.addresses.GetAddressRequest
	(*GetAddressResponse)(nil),    // 6: txpull.v1.addresses.GetAddressResponse
	(*timestamp.Timestamp)(nil),   // 7: google.protobuf.Timestamp
	(*common.Status)(nil),         // 8: txpull.v1.common.Status
}
var file_addresses_addresses_proto_depIdxs = []int32{
	0,  // 0: txpull.v1.addresses.Address.malicious_reason:type_name -> txpull.v1.addresses.MaliciousAddressReasons
	1,  // 1: txpull.v1.addresses.Address.status:type_name -> txpull.v1.addresses.AddressStatus
	7,  // 2: txpull.v1.addresses.Address.available_since_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 3: txpull.v1.addresses.Address.queued_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 4: txpull.v1.addresses.Address.processed_timestamp:type_name -> google.protobuf.Timestamp
	8,  // 5: txpull.v1.addresses.FilterAddressRequest.status:type_name -> txpull.v1.common.Status
	0,  // 6: txpull.v1.addresses.FilterAddressRequest.malicious_reason:type_name -> txpull.v1.addresses.MaliciousAddressReasons
	8,  // 7: txpull.v1.addresses.FilterAddressResponse.status:type_name -> txpull.v1.common.Status
	2,  // 8: txpull.v1.addresses.FilterAddressResponse.addresses:type_name -> txpull.v1.addresses.Address
	8,  // 9: txpull.v1.addresses.GetAddressResponse.status:type_name -> txpull.v1.common.Status
	2,  // 10: txpull.v1.addresses.GetAddressResponse.address:type_name -> txpull.v1.addresses.Address
	3,  // 11: txpull.v1.addresses.Addresses.Filter:input_type -> txpull.v1.addresses.FilterAddressRequest
	5,  // 12: txpull.v1.addresses.Addresses.Get:input_type -> txpull.v1.addresses.GetAddressRequest
	4,  // 13: txpull.v1.addresses.Addresses.Filter:output_type -> txpull.v1.addresses.FilterAddressResponse
	6,  // 14: txpull.v1.addresses.Addresses.Get:output_type -> txpull.v1.addresses.GetAddressResponse
	13, // [13:15] is the sub-list for method output_type
	11, // [11:13] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_addresses_addresses_proto_init() }
func file_addresses_addresses_proto_init() {
	if File_addresses_addresses_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_addresses_addresses_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_addresses_addresses_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_addresses_addresses_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_addresses_addresses_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_addresses_addresses_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_addresses_addresses_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_addresses_addresses_proto_goTypes,
		DependencyIndexes: file_addresses_addresses_proto_depIdxs,
		EnumInfos:         file_addresses_addresses_proto_enumTypes,
		MessageInfos:      file_addresses_addresses_proto_msgTypes,
	}.Build()
	File_addresses_addresses_proto = out.File
	file_addresses_addresses_proto_rawDesc = nil
	file_addresses_addresses_proto_goTypes = nil
	file_addresses_addresses_proto_depIdxs = nil
}
