// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: metadata/metadata.proto

package metadata_pb

import (
	common "github.com/unpackdev/protos/dist/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BytecodeMetadata represents metadata associated with bytecode.
type BytecodeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionBytecode []byte `protobuf:"bytes,1,opt,name=execution_bytecode,json=executionBytecode,proto3" json:"execution_bytecode,omitempty"` // The execution bytecode.
	CborLength        uint32 `protobuf:"varint,2,opt,name=cbor_length,json=cborLength,proto3" json:"cbor_length,omitempty"`                     // The length of the CBOR data.
	Raw               []byte `protobuf:"bytes,3,opt,name=raw,proto3" json:"raw,omitempty"`                                                      // The raw bytecode.
	Ipfs              string `protobuf:"bytes,4,opt,name=ipfs,proto3" json:"ipfs,omitempty"`                                                    // The IPFS hash of the bytecode.
	Bzzr1             string `protobuf:"bytes,5,opt,name=bzzr1,proto3" json:"bzzr1,omitempty"`                                                  // The bzzr1 hash of the bytecode.
	Bzzr0             string `protobuf:"bytes,6,opt,name=bzzr0,proto3" json:"bzzr0,omitempty"`                                                  // The bzzr0 hash of the bytecode.
	Experimental      bool   `protobuf:"varint,7,opt,name=experimental,proto3" json:"experimental,omitempty"`                                   // Indicates if the bytecode is experimental.
	Solc              string `protobuf:"bytes,8,opt,name=solc,proto3" json:"solc,omitempty"`                                                    // The version of the Solidity compiler used.
	Solgo             string `protobuf:"bytes,9,opt,name=solgo,proto3" json:"solgo,omitempty"`                                                  // The version of SolGo used.
}

func (x *BytecodeMetadata) Reset() {
	*x = BytecodeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_metadata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytecodeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytecodeMetadata) ProtoMessage() {}

func (x *BytecodeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_metadata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytecodeMetadata.ProtoReflect.Descriptor instead.
func (*BytecodeMetadata) Descriptor() ([]byte, []int) {
	return file_metadata_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *BytecodeMetadata) GetExecutionBytecode() []byte {
	if x != nil {
		return x.ExecutionBytecode
	}
	return nil
}

func (x *BytecodeMetadata) GetCborLength() uint32 {
	if x != nil {
		return x.CborLength
	}
	return 0
}

func (x *BytecodeMetadata) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (x *BytecodeMetadata) GetIpfs() string {
	if x != nil {
		return x.Ipfs
	}
	return ""
}

func (x *BytecodeMetadata) GetBzzr1() string {
	if x != nil {
		return x.Bzzr1
	}
	return ""
}

func (x *BytecodeMetadata) GetBzzr0() string {
	if x != nil {
		return x.Bzzr0
	}
	return ""
}

func (x *BytecodeMetadata) GetExperimental() bool {
	if x != nil {
		return x.Experimental
	}
	return false
}

func (x *BytecodeMetadata) GetSolc() string {
	if x != nil {
		return x.Solc
	}
	return ""
}

func (x *BytecodeMetadata) GetSolgo() string {
	if x != nil {
		return x.Solgo
	}
	return ""
}

// MetadataRequest represents a request for metadata.
type MetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId  int64  `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"` // The chain ID.
	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                 // The address of the contract.
	Bytecode string `protobuf:"bytes,3,opt,name=bytecode,proto3" json:"bytecode,omitempty"`               // The bytecode of the contract.
}

func (x *MetadataRequest) Reset() {
	*x = MetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_metadata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest) ProtoMessage() {}

func (x *MetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_metadata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest.ProtoReflect.Descriptor instead.
func (*MetadataRequest) Descriptor() ([]byte, []int) {
	return file_metadata_metadata_proto_rawDescGZIP(), []int{1}
}

func (x *MetadataRequest) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *MetadataRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MetadataRequest) GetBytecode() string {
	if x != nil {
		return x.Bytecode
	}
	return ""
}

// Metadata represents contract metadata.
type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Raw      string                      `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`                                                                                                 // The raw metadata.
	Version  int32                       `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`                                                                                        // The version of the metadata.
	Compiler *Metadata_Compiler          `protobuf:"bytes,3,opt,name=compiler,proto3" json:"compiler,omitempty"`                                                                                       // The compiler used to compile the contract.
	Language string                      `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`                                                                                       // The language used to write the contract.
	Settings *Metadata_Settings          `protobuf:"bytes,5,opt,name=settings,proto3" json:"settings,omitempty"`                                                                                       // The settings used to compile the contract.
	Output   *Metadata_Output            `protobuf:"bytes,6,opt,name=output,proto3" json:"output,omitempty"`                                                                                           // The output of the contract compilation.
	Sources  map[string]*Metadata_Source `protobuf:"bytes,7,rep,name=sources,proto3" json:"sources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // The sources of the contract.
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_metadata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_metadata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_metadata_metadata_proto_rawDescGZIP(), []int{2}
}

func (x *Metadata) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *Metadata) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Metadata) GetCompiler() *Metadata_Compiler {
	if x != nil {
		return x.Compiler
	}
	return nil
}

func (x *Metadata) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Metadata) GetSettings() *Metadata_Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *Metadata) GetOutput() *Metadata_Output {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *Metadata) GetSources() map[string]*Metadata_Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

// MetadataResponse represents a response to a metadata request.
type MetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           *common.Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                                             // The status of the response.
	ChainId          int64             `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`                           // The chain ID.
	Address          string            `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`                                           // The address of the contract.
	Bytecode         string            `protobuf:"bytes,4,opt,name=bytecode,proto3" json:"bytecode,omitempty"`                                         // The bytecode of the contract.
	BytecodeMetadata *BytecodeMetadata `protobuf:"bytes,5,opt,name=bytecode_metadata,json=bytecodeMetadata,proto3" json:"bytecode_metadata,omitempty"` // The bytecode metadata.
	Metadata         *Metadata         `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`                                         // The contract metadata.
}

func (x *MetadataResponse) Reset() {
	*x = MetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_metadata_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponse) ProtoMessage() {}

func (x *MetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_metadata_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponse.ProtoReflect.Descriptor instead.
func (*MetadataResponse) Descriptor() ([]byte, []int) {
	return file_metadata_metadata_proto_rawDescGZIP(), []int{3}
}

func (x *MetadataResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *MetadataResponse) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *MetadataResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MetadataResponse) GetBytecode() string {
	if x != nil {
		return x.Bytecode
	}
	return ""
}

func (x *MetadataResponse) GetBytecodeMetadata() *BytecodeMetadata {
	if x != nil {
		return x.BytecodeMetadata
	}
	return nil
}

func (x *MetadataResponse) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Compiler represents the compiler used to compile the contract.
type Metadata_Compiler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`     // The version of the compiler.
	Keccak256 string `protobuf:"bytes,2,opt,name=keccak256,proto3" json:"keccak256,omitempty"` // The Keccak-256 hash of the compiler.
}

func (x *Metadata_Compiler) Reset() {
	*x = Metadata_Compiler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_metadata_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Compiler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Compiler) ProtoMessage() {}

func (x *Metadata_Compiler) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_metadata_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Compiler.ProtoReflect.Descriptor instead.
func (*Metadata_Compiler) Descriptor() ([]byte, []int) {
	return file_metadata_metadata_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Metadata_Compiler) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Metadata_Compiler) GetKeccak256() string {
	if x != nil {
		return x.Keccak256
	}
	return ""
}

// Settings represents the settings used to compile the contract.
type Metadata_Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvmVersion        string                              `protobuf:"bytes,1,opt,name=evm_version,json=evmVersion,proto3" json:"evm_version,omitempty"`                                                                                                              // The version of the EVM used.
	CompilationTarget map[string]string                   `protobuf:"bytes,2,rep,name=compilation_target,json=compilationTarget,proto3" json:"compilation_target,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // The compilation target.
	Libraries         map[string]string                   `protobuf:"bytes,3,rep,name=libraries,proto3" json:"libraries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`                                          // The libraries used.
	Remappings        []string                            `protobuf:"bytes,4,rep,name=remappings,proto3" json:"remappings,omitempty"`                                                                                                                                // The remappings used.
	Metadata          *Metadata_Settings_MetadataSettings `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                                                                    // The metadata settings.
	Optimizer         *Metadata_Settings_Optimizer        `protobuf:"bytes,6,opt,name=optimizer,proto3" json:"optimizer,omitempty"`                                                                                                                                  // The optimizer settings.
}

func (x *Metadata_Settings) Reset() {
	*x = Metadata_Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_metadata_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Settings) ProtoMessage() {}

func (x *Metadata_Settings) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_metadata_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Settings.ProtoReflect.Descriptor instead.
func (*Metadata_Settings) Descriptor() ([]byte, []int) {
	return file_metadata_metadata_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Metadata_Settings) GetEvmVersion() string {
	if x != nil {
		return x.EvmVersion
	}
	return ""
}

func (x *Metadata_Settings) GetCompilationTarget() map[string]string {
	if x != nil {
		return x.CompilationTarget
	}
	return nil
}

func (x *Metadata_Settings) GetLibraries() map[string]string {
	if x != nil {
		return x.Libraries
	}
	return nil
}

func (x *Metadata_Settings) GetRemappings() []string {
	if x != nil {
		return x.Remappings
	}
	return nil
}

func (x *Metadata_Settings) GetMetadata() *Metadata_Settings_MetadataSettings {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Metadata_Settings) GetOptimizer() *Metadata_Settings_Optimizer {
	if x != nil {
		return x.Optimizer
	}
	return nil
}

// Output represents the output of the contract compilation.
type Metadata_Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Abi *anypb.Any `protobuf:"bytes,1,opt,name=abi,proto3" json:"abi,omitempty"` // The ABI of the contract.
}

func (x *Metadata_Output) Reset() {
	*x = Metadata_Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_metadata_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Output) ProtoMessage() {}

func (x *Metadata_Output) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_metadata_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Output.ProtoReflect.Descriptor instead.
func (*Metadata_Output) Descriptor() ([]byte, []int) {
	return file_metadata_metadata_proto_rawDescGZIP(), []int{2, 3}
}

func (x *Metadata_Output) GetAbi() *anypb.Any {
	if x != nil {
		return x.Abi
	}
	return nil
}

// Source represents a source of the contract.
type Metadata_Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content   string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`     // The content of the source.
	Keccak256 string   `protobuf:"bytes,2,opt,name=keccak256,proto3" json:"keccak256,omitempty"` // The Keccak-256 hash of the source.
	License   string   `protobuf:"bytes,3,opt,name=license,proto3" json:"license,omitempty"`     // The license of the source.
	Urls      []string `protobuf:"bytes,4,rep,name=urls,proto3" json:"urls,omitempty"`           // The URLs of the source.
}

func (x *Metadata_Source) Reset() {
	*x = Metadata_Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_metadata_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Source) ProtoMessage() {}

func (x *Metadata_Source) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_metadata_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Source.ProtoReflect.Descriptor instead.
func (*Metadata_Source) Descriptor() ([]byte, []int) {
	return file_metadata_metadata_proto_rawDescGZIP(), []int{2, 4}
}

func (x *Metadata_Source) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Metadata_Source) GetKeccak256() string {
	if x != nil {
		return x.Keccak256
	}
	return ""
}

func (x *Metadata_Source) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *Metadata_Source) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

// MetadataSettings represents the metadata settings.
type Metadata_Settings_MetadataSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BytecodeHash      string `protobuf:"bytes,1,opt,name=bytecode_hash,json=bytecodeHash,proto3" json:"bytecode_hash,omitempty"`                   // The hash of the bytecode.
	UseLiteralContent bool   `protobuf:"varint,2,opt,name=use_literal_content,json=useLiteralContent,proto3" json:"use_literal_content,omitempty"` // Indicates if literal content was used.
	AppendCbor        bool   `protobuf:"varint,3,opt,name=append_cbor,json=appendCbor,proto3" json:"append_cbor,omitempty"`                        // Indicates if CBOR was appended.
}

func (x *Metadata_Settings_MetadataSettings) Reset() {
	*x = Metadata_Settings_MetadataSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_metadata_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Settings_MetadataSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Settings_MetadataSettings) ProtoMessage() {}

func (x *Metadata_Settings_MetadataSettings) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_metadata_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Settings_MetadataSettings.ProtoReflect.Descriptor instead.
func (*Metadata_Settings_MetadataSettings) Descriptor() ([]byte, []int) {
	return file_metadata_metadata_proto_rawDescGZIP(), []int{2, 2, 2}
}

func (x *Metadata_Settings_MetadataSettings) GetBytecodeHash() string {
	if x != nil {
		return x.BytecodeHash
	}
	return ""
}

func (x *Metadata_Settings_MetadataSettings) GetUseLiteralContent() bool {
	if x != nil {
		return x.UseLiteralContent
	}
	return false
}

func (x *Metadata_Settings_MetadataSettings) GetAppendCbor() bool {
	if x != nil {
		return x.AppendCbor
	}
	return false
}

// Optimizer represents the optimizer settings.
type Metadata_Settings_Optimizer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool                                 `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"` // Indicates if the optimizer was enabled.
	Runs    int32                                `protobuf:"varint,2,opt,name=runs,proto3" json:"runs,omitempty"`       // The number of runs the optimizer made.
	Details *Metadata_Settings_Optimizer_Details `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`  // The details of the optimizer.
}

func (x *Metadata_Settings_Optimizer) Reset() {
	*x = Metadata_Settings_Optimizer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_metadata_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Settings_Optimizer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Settings_Optimizer) ProtoMessage() {}

func (x *Metadata_Settings_Optimizer) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_metadata_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Settings_Optimizer.ProtoReflect.Descriptor instead.
func (*Metadata_Settings_Optimizer) Descriptor() ([]byte, []int) {
	return file_metadata_metadata_proto_rawDescGZIP(), []int{2, 2, 3}
}

func (x *Metadata_Settings_Optimizer) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Metadata_Settings_Optimizer) GetRuns() int32 {
	if x != nil {
		return x.Runs
	}
	return 0
}

func (x *Metadata_Settings_Optimizer) GetDetails() *Metadata_Settings_Optimizer_Details {
	if x != nil {
		return x.Details
	}
	return nil
}

// Details represents the details of the optimizer.
type Metadata_Settings_Optimizer_Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peephole          bool                                            `protobuf:"varint,1,opt,name=peephole,proto3" json:"peephole,omitempty"`                                            // Indicates if the peephole optimization was used.
	Inliner           bool                                            `protobuf:"varint,2,opt,name=inliner,proto3" json:"inliner,omitempty"`                                              // Indicates if the inliner optimization was used.
	JumpdestRemover   bool                                            `protobuf:"varint,3,opt,name=jumpdest_remover,json=jumpdestRemover,proto3" json:"jumpdest_remover,omitempty"`       // Indicates if the jumpdest remover optimization was used.
	OrderLiterals     bool                                            `protobuf:"varint,4,opt,name=order_literals,json=orderLiterals,proto3" json:"order_literals,omitempty"`             // Indicates if the order literals optimization was used.
	Deduplicate       bool                                            `protobuf:"varint,5,opt,name=deduplicate,proto3" json:"deduplicate,omitempty"`                                      // Indicates if the deduplicate optimization was used.
	Cse               bool                                            `protobuf:"varint,6,opt,name=cse,proto3" json:"cse,omitempty"`                                                      // Indicates if the common subexpression elimination optimization was used.
	ConstantOptimizer bool                                            `protobuf:"varint,7,opt,name=constant_optimizer,json=constantOptimizer,proto3" json:"constant_optimizer,omitempty"` // Indicates if the constant optimizer was used.
	Yul               bool                                            `protobuf:"varint,8,opt,name=yul,proto3" json:"yul,omitempty"`                                                      // Indicates if the Yul optimizer was used.
	YulDetails        *Metadata_Settings_Optimizer_Details_YulDetails `protobuf:"bytes,9,opt,name=yul_details,json=yulDetails,proto3" json:"yul_details,omitempty"`                       // The details of the Yul optimizer.
}

func (x *Metadata_Settings_Optimizer_Details) Reset() {
	*x = Metadata_Settings_Optimizer_Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_metadata_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Settings_Optimizer_Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Settings_Optimizer_Details) ProtoMessage() {}

func (x *Metadata_Settings_Optimizer_Details) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_metadata_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Settings_Optimizer_Details.ProtoReflect.Descriptor instead.
func (*Metadata_Settings_Optimizer_Details) Descriptor() ([]byte, []int) {
	return file_metadata_metadata_proto_rawDescGZIP(), []int{2, 2, 3, 0}
}

func (x *Metadata_Settings_Optimizer_Details) GetPeephole() bool {
	if x != nil {
		return x.Peephole
	}
	return false
}

func (x *Metadata_Settings_Optimizer_Details) GetInliner() bool {
	if x != nil {
		return x.Inliner
	}
	return false
}

func (x *Metadata_Settings_Optimizer_Details) GetJumpdestRemover() bool {
	if x != nil {
		return x.JumpdestRemover
	}
	return false
}

func (x *Metadata_Settings_Optimizer_Details) GetOrderLiterals() bool {
	if x != nil {
		return x.OrderLiterals
	}
	return false
}

func (x *Metadata_Settings_Optimizer_Details) GetDeduplicate() bool {
	if x != nil {
		return x.Deduplicate
	}
	return false
}

func (x *Metadata_Settings_Optimizer_Details) GetCse() bool {
	if x != nil {
		return x.Cse
	}
	return false
}

func (x *Metadata_Settings_Optimizer_Details) GetConstantOptimizer() bool {
	if x != nil {
		return x.ConstantOptimizer
	}
	return false
}

func (x *Metadata_Settings_Optimizer_Details) GetYul() bool {
	if x != nil {
		return x.Yul
	}
	return false
}

func (x *Metadata_Settings_Optimizer_Details) GetYulDetails() *Metadata_Settings_Optimizer_Details_YulDetails {
	if x != nil {
		return x.YulDetails
	}
	return nil
}

// YulDetails represents the details of the Yul optimizer.
type Metadata_Settings_Optimizer_Details_YulDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StackAllocation bool  `protobuf:"varint,1,opt,name=stack_allocation,json=stackAllocation,proto3" json:"stack_allocation,omitempty"` // Indicates if stack allocation was used.
	OptimizerSteps  int32 `protobuf:"varint,2,opt,name=optimizer_steps,json=optimizerSteps,proto3" json:"optimizer_steps,omitempty"`    // The number of steps the optimizer made.
}

func (x *Metadata_Settings_Optimizer_Details_YulDetails) Reset() {
	*x = Metadata_Settings_Optimizer_Details_YulDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_metadata_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Settings_Optimizer_Details_YulDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Settings_Optimizer_Details_YulDetails) ProtoMessage() {}

func (x *Metadata_Settings_Optimizer_Details_YulDetails) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_metadata_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Settings_Optimizer_Details_YulDetails.ProtoReflect.Descriptor instead.
func (*Metadata_Settings_Optimizer_Details_YulDetails) Descriptor() ([]byte, []int) {
	return file_metadata_metadata_proto_rawDescGZIP(), []int{2, 2, 3, 0, 0}
}

func (x *Metadata_Settings_Optimizer_Details_YulDetails) GetStackAllocation() bool {
	if x != nil {
		return x.StackAllocation
	}
	return false
}

func (x *Metadata_Settings_Optimizer_Details_YulDetails) GetOptimizerSteps() int32 {
	if x != nil {
		return x.OptimizerSteps
	}
	return 0
}

var File_metadata_metadata_proto protoreflect.FileDescriptor

var file_metadata_metadata_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x75, 0x6e, 0x70, 0x61, 0x63,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x13, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x02,
	0x0a, 0x10, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x62, 0x6f, 0x72, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x72, 0x61, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x66, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x66, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x7a, 0x7a, 0x72,
	0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x7a, 0x7a, 0x72, 0x31, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x7a, 0x7a, 0x72, 0x30, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62,
	0x7a, 0x7a, 0x72, 0x30, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x6c, 0x63,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x6c, 0x63, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x6f, 0x6c, 0x67, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x6c,
	0x67, 0x6f, 0x22, 0x62, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x79,
	0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x79,
	0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xc1, 0x0f, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x41, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x41,
	0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x3b, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x43,
	0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x1a, 0x5f, 0x0a, 0x0c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65,
	0x63, 0x63, 0x61, 0x6b, 0x32, 0x35, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b,
	0x65, 0x63, 0x63, 0x61, 0x6b, 0x32, 0x35, 0x36, 0x1a, 0x9d, 0x0a, 0x0a, 0x08, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x6d, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x76, 0x6d, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x52, 0x0a, 0x09, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x52, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x75, 0x6e, 0x70, 0x61,
	0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x09, 0x6f,
	0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x52,
	0x09, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x1a, 0x44, 0x0a, 0x16, 0x43, 0x6f,
	0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x3c, 0x0a, 0x0e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x88,
	0x01, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x79, 0x74, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x5f,
	0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x75, 0x73, 0x65, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x5f, 0x63, 0x62, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x43, 0x62, 0x6f, 0x72, 0x1a, 0xdc, 0x04, 0x0a, 0x09, 0x4f, 0x70,
	0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x72, 0x75, 0x6e, 0x73, 0x12, 0x51, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0xcd, 0x03, 0x0a, 0x07, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x70, 0x68, 0x6f, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x65, 0x65, 0x70, 0x68, 0x6f, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x6a, 0x75,
	0x6d, 0x70, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6a, 0x75, 0x6d, 0x70, 0x64, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6c,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x64, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x63, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x79, 0x75, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x79, 0x75,
	0x6c, 0x12, 0x63, 0x0a, 0x0b, 0x79, 0x75, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e,
	0x59, 0x75, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a, 0x79, 0x75, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x60, 0x0a, 0x0a, 0x59, 0x75, 0x6c, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x65,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69,
	0x7a, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x73, 0x1a, 0x30, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x26, 0x0a, 0x03, 0x61, 0x62, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x61, 0x62, 0x69, 0x1a, 0x6e, 0x0a, 0x06, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6b, 0x65, 0x63, 0x63, 0x61, 0x6b, 0x32, 0x35, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6b, 0x65, 0x63, 0x63, 0x61, 0x6b, 0x32, 0x35, 0x36, 0x12, 0x18, 0x0a, 0x07,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x22, 0xa2, 0x02, 0x0a, 0x10, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x51, 0x0a, 0x11, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42,
	0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x6e,
	0x70, 0x61, 0x63, 0x6b, 0x64, 0x65, 0x76, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x64,
	0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x3b,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_metadata_metadata_proto_rawDescOnce sync.Once
	file_metadata_metadata_proto_rawDescData = file_metadata_metadata_proto_rawDesc
)

func file_metadata_metadata_proto_rawDescGZIP() []byte {
	file_metadata_metadata_proto_rawDescOnce.Do(func() {
		file_metadata_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(file_metadata_metadata_proto_rawDescData)
	})
	return file_metadata_metadata_proto_rawDescData
}

var file_metadata_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_metadata_metadata_proto_goTypes = []interface{}{
	(*BytecodeMetadata)(nil),  // 0: unpack.v1.metadata.BytecodeMetadata
	(*MetadataRequest)(nil),   // 1: unpack.v1.metadata.MetadataRequest
	(*Metadata)(nil),          // 2: unpack.v1.metadata.Metadata
	(*MetadataResponse)(nil),  // 3: unpack.v1.metadata.MetadataResponse
	nil,                       // 4: unpack.v1.metadata.Metadata.SourcesEntry
	(*Metadata_Compiler)(nil), // 5: unpack.v1.metadata.Metadata.Compiler
	(*Metadata_Settings)(nil), // 6: unpack.v1.metadata.Metadata.Settings
	(*Metadata_Output)(nil),   // 7: unpack.v1.metadata.Metadata.Output
	(*Metadata_Source)(nil),   // 8: unpack.v1.metadata.Metadata.Source
	nil,                       // 9: unpack.v1.metadata.Metadata.Settings.CompilationTargetEntry
	nil,                       // 10: unpack.v1.metadata.Metadata.Settings.LibrariesEntry
	(*Metadata_Settings_MetadataSettings)(nil),             // 11: unpack.v1.metadata.Metadata.Settings.MetadataSettings
	(*Metadata_Settings_Optimizer)(nil),                    // 12: unpack.v1.metadata.Metadata.Settings.Optimizer
	(*Metadata_Settings_Optimizer_Details)(nil),            // 13: unpack.v1.metadata.Metadata.Settings.Optimizer.Details
	(*Metadata_Settings_Optimizer_Details_YulDetails)(nil), // 14: unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails
	(*common.Status)(nil),                                  // 15: unpack.v1.common.Status
	(*anypb.Any)(nil),                                      // 16: google.protobuf.Any
}
var file_metadata_metadata_proto_depIdxs = []int32{
	5,  // 0: unpack.v1.metadata.Metadata.compiler:type_name -> unpack.v1.metadata.Metadata.Compiler
	6,  // 1: unpack.v1.metadata.Metadata.settings:type_name -> unpack.v1.metadata.Metadata.Settings
	7,  // 2: unpack.v1.metadata.Metadata.output:type_name -> unpack.v1.metadata.Metadata.Output
	4,  // 3: unpack.v1.metadata.Metadata.sources:type_name -> unpack.v1.metadata.Metadata.SourcesEntry
	15, // 4: unpack.v1.metadata.MetadataResponse.status:type_name -> unpack.v1.common.Status
	0,  // 5: unpack.v1.metadata.MetadataResponse.bytecode_metadata:type_name -> unpack.v1.metadata.BytecodeMetadata
	2,  // 6: unpack.v1.metadata.MetadataResponse.metadata:type_name -> unpack.v1.metadata.Metadata
	8,  // 7: unpack.v1.metadata.Metadata.SourcesEntry.value:type_name -> unpack.v1.metadata.Metadata.Source
	9,  // 8: unpack.v1.metadata.Metadata.Settings.compilation_target:type_name -> unpack.v1.metadata.Metadata.Settings.CompilationTargetEntry
	10, // 9: unpack.v1.metadata.Metadata.Settings.libraries:type_name -> unpack.v1.metadata.Metadata.Settings.LibrariesEntry
	11, // 10: unpack.v1.metadata.Metadata.Settings.metadata:type_name -> unpack.v1.metadata.Metadata.Settings.MetadataSettings
	12, // 11: unpack.v1.metadata.Metadata.Settings.optimizer:type_name -> unpack.v1.metadata.Metadata.Settings.Optimizer
	16, // 12: unpack.v1.metadata.Metadata.Output.abi:type_name -> google.protobuf.Any
	13, // 13: unpack.v1.metadata.Metadata.Settings.Optimizer.details:type_name -> unpack.v1.metadata.Metadata.Settings.Optimizer.Details
	14, // 14: unpack.v1.metadata.Metadata.Settings.Optimizer.Details.yul_details:type_name -> unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_metadata_metadata_proto_init() }
func file_metadata_metadata_proto_init() {
	if File_metadata_metadata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_metadata_metadata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytecodeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_metadata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_metadata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_metadata_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_metadata_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Compiler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_metadata_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_metadata_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_metadata_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_metadata_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Settings_MetadataSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_metadata_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Settings_Optimizer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_metadata_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Settings_Optimizer_Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_metadata_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Settings_Optimizer_Details_YulDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metadata_metadata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_metadata_metadata_proto_goTypes,
		DependencyIndexes: file_metadata_metadata_proto_depIdxs,
		MessageInfos:      file_metadata_metadata_proto_msgTypes,
	}.Build()
	File_metadata_metadata_proto = out.File
	file_metadata_metadata_proto_rawDesc = nil
	file_metadata_metadata_proto_goTypes = nil
	file_metadata_metadata_proto_depIdxs = nil
}
