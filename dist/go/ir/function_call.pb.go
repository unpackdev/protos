// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: ir/function_call.proto

package ir_pb

import (
	ast "github.com/txpull/protos/dist/go/ast"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a function call in the intermediate representation (IR).
type FunctionCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    // Unique identifier for the function call.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Name of the function call.
	// Node type of the function call. Refers to the AST node type enumeration in "ast/types.proto".
	NodeType ast.NodeType `protobuf:"varint,3,opt,name=node_type,json=nodeType,proto3,enum=txpull.v1.ast.NodeType" json:"node_type,omitempty"`
	// Kind of the function call. Refers to the AST node type enumeration in "ast/types.proto".
	Kind ast.NodeType `protobuf:"varint,4,opt,name=kind,proto3,enum=txpull.v1.ast.NodeType" json:"kind,omitempty"`
	// List of argument types associated with the function call. Each argument type is defined using the "txpull.v1.ast.TypeDescription" message.
	ArgumentTypes []*ast.TypeDescription `protobuf:"bytes,5,rep,name=argument_types,json=argumentTypes,proto3" json:"argument_types,omitempty"`
	// List of arguments associated with the function call. Each argument is defined using the "txpull.v1.ir.Argument" message.
	Arguments               []*Argument `protobuf:"bytes,6,rep,name=arguments,proto3" json:"arguments,omitempty"`
	IsExternal              bool        `protobuf:"varint,7,opt,name=is_external,json=isExternal,proto3" json:"is_external,omitempty"`                                           // Indicates if the function call is external.
	ExternalContractId      int64       `protobuf:"varint,8,opt,name=external_contract_id,json=externalContractId,proto3" json:"external_contract_id,omitempty"`                 // Identifier of the external contract, if the function call is external.
	ExternalContractName    string      `protobuf:"bytes,9,opt,name=external_contract_name,json=externalContractName,proto3" json:"external_contract_name,omitempty"`            // Name of the external contract, if the function call is external.
	ReferenceStatementId    int64       `protobuf:"varint,10,opt,name=reference_statement_id,json=referenceStatementId,proto3" json:"reference_statement_id,omitempty"`          // Identifier of the reference statement, if applicable.
	ReferencedDeclarationId int64       `protobuf:"varint,11,opt,name=referenced_declaration_id,json=referencedDeclarationId,proto3" json:"referenced_declaration_id,omitempty"` // Identifier of the referenced declaration, if applicable.
	// Type description of the function call. Refers to the "txpull.v1.ast.TypeDescription" message in "ast/types.proto".
	TypeDescription *ast.TypeDescription `protobuf:"bytes,12,opt,name=type_description,json=typeDescription,proto3" json:"type_description,omitempty"`
}

func (x *FunctionCall) Reset() {
	*x = FunctionCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ir_function_call_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionCall) ProtoMessage() {}

func (x *FunctionCall) ProtoReflect() protoreflect.Message {
	mi := &file_ir_function_call_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionCall.ProtoReflect.Descriptor instead.
func (*FunctionCall) Descriptor() ([]byte, []int) {
	return file_ir_function_call_proto_rawDescGZIP(), []int{0}
}

func (x *FunctionCall) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FunctionCall) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FunctionCall) GetNodeType() ast.NodeType {
	if x != nil {
		return x.NodeType
	}
	return ast.NodeType(0)
}

func (x *FunctionCall) GetKind() ast.NodeType {
	if x != nil {
		return x.Kind
	}
	return ast.NodeType(0)
}

func (x *FunctionCall) GetArgumentTypes() []*ast.TypeDescription {
	if x != nil {
		return x.ArgumentTypes
	}
	return nil
}

func (x *FunctionCall) GetArguments() []*Argument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *FunctionCall) GetIsExternal() bool {
	if x != nil {
		return x.IsExternal
	}
	return false
}

func (x *FunctionCall) GetExternalContractId() int64 {
	if x != nil {
		return x.ExternalContractId
	}
	return 0
}

func (x *FunctionCall) GetExternalContractName() string {
	if x != nil {
		return x.ExternalContractName
	}
	return ""
}

func (x *FunctionCall) GetReferenceStatementId() int64 {
	if x != nil {
		return x.ReferenceStatementId
	}
	return 0
}

func (x *FunctionCall) GetReferencedDeclarationId() int64 {
	if x != nil {
		return x.ReferencedDeclarationId
	}
	return 0
}

func (x *FunctionCall) GetTypeDescription() *ast.TypeDescription {
	if x != nil {
		return x.TypeDescription
	}
	return nil
}

var File_ir_function_call_proto protoreflect.FileDescriptor

var file_ir_function_call_proto_rawDesc = []byte{
	0x0a, 0x16, 0x69, 0x72, 0x2f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x69, 0x72, 0x1a, 0x0f, 0x61, 0x73, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x61, 0x73, 0x74, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x69, 0x72,
	0x2f, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd8, 0x04, 0x0a, 0x0c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x45, 0x0a, 0x0e, 0x61, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x34,
	0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x72,
	0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x16, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x64, 0x5f, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x64, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x49, 0x0a, 0x10, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x78, 0x70, 0x75,
	0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x69,
	0x72, 0x3b, 0x69, 0x72, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ir_function_call_proto_rawDescOnce sync.Once
	file_ir_function_call_proto_rawDescData = file_ir_function_call_proto_rawDesc
)

func file_ir_function_call_proto_rawDescGZIP() []byte {
	file_ir_function_call_proto_rawDescOnce.Do(func() {
		file_ir_function_call_proto_rawDescData = protoimpl.X.CompressGZIP(file_ir_function_call_proto_rawDescData)
	})
	return file_ir_function_call_proto_rawDescData
}

var file_ir_function_call_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ir_function_call_proto_goTypes = []interface{}{
	(*FunctionCall)(nil),        // 0: txpull.v1.ir.FunctionCall
	(ast.NodeType)(0),           // 1: txpull.v1.ast.NodeType
	(*ast.TypeDescription)(nil), // 2: txpull.v1.ast.TypeDescription
	(*Argument)(nil),            // 3: txpull.v1.ir.Argument
}
var file_ir_function_call_proto_depIdxs = []int32{
	1, // 0: txpull.v1.ir.FunctionCall.node_type:type_name -> txpull.v1.ast.NodeType
	1, // 1: txpull.v1.ir.FunctionCall.kind:type_name -> txpull.v1.ast.NodeType
	2, // 2: txpull.v1.ir.FunctionCall.argument_types:type_name -> txpull.v1.ast.TypeDescription
	3, // 3: txpull.v1.ir.FunctionCall.arguments:type_name -> txpull.v1.ir.Argument
	2, // 4: txpull.v1.ir.FunctionCall.type_description:type_name -> txpull.v1.ast.TypeDescription
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_ir_function_call_proto_init() }
func file_ir_function_call_proto_init() {
	if File_ir_function_call_proto != nil {
		return
	}
	file_ir_argument_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ir_function_call_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ir_function_call_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ir_function_call_proto_goTypes,
		DependencyIndexes: file_ir_function_call_proto_depIdxs,
		MessageInfos:      file_ir_function_call_proto_msgTypes,
	}.Build()
	File_ir_function_call_proto = out.File
	file_ir_function_call_proto_rawDesc = nil
	file_ir_function_call_proto_goTypes = nil
	file_ir_function_call_proto_depIdxs = nil
}
