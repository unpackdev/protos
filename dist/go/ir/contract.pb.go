// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: ir/contract.proto

package ir_pb

import (
	ast "github.com/unpackdev/protos/dist/go/ast"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a contract declaration in the intermediate representation (IR).
type Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // Unique identifier for the contract.
	// Node type of the contract. Refers to the AST node type enumeration in "ast/types.proto".
	NodeType ast.NodeType `protobuf:"varint,2,opt,name=node_type,json=nodeType,proto3,enum=txpull.v1.ast.NodeType" json:"node_type,omitempty"`
	// Kind of the contract. Refers to the AST node type enumeration in "ast/types.proto".
	Kind           ast.NodeType     `protobuf:"varint,3,opt,name=kind,proto3,enum=txpull.v1.ast.NodeType" json:"kind,omitempty"`
	SourceUnitId   int64            `protobuf:"varint,4,opt,name=source_unit_id,json=sourceUnitId,proto3" json:"source_unit_id,omitempty"`     // Identifier of the source unit for the contract.
	Name           string           `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                            // Name of the contract.
	License        string           `protobuf:"bytes,6,opt,name=license,proto3" json:"license,omitempty"`                                      // License information for the contract.
	Language       string           `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`                                    // Language used for the contract.
	AbsolutePath   string           `protobuf:"bytes,8,opt,name=absolute_path,json=absolutePath,proto3" json:"absolute_path,omitempty"`        // Absolute path of the contract.
	Symbols        []*Symbol        `protobuf:"bytes,9,rep,name=symbols,proto3" json:"symbols,omitempty"`                                      // List of symbols in the contract.
	Imports        []*Import        `protobuf:"bytes,10,rep,name=imports,proto3" json:"imports,omitempty"`                                     // List of import statements in the contract.
	Pragmas        []*Pragma        `protobuf:"bytes,11,rep,name=pragmas,proto3" json:"pragmas,omitempty"`                                     // List of pragmas in the contract.
	StateVariables []*StateVariable `protobuf:"bytes,12,rep,name=state_variables,json=stateVariables,proto3" json:"state_variables,omitempty"` // List of state variables in the contract.
	Structs        []*Struct        `protobuf:"bytes,13,rep,name=structs,proto3" json:"structs,omitempty"`                                     // List of struct declarations in the contract.
	Enums          []*Enum          `protobuf:"bytes,14,rep,name=enums,proto3" json:"enums,omitempty"`                                         // List of enum declarations in the contract.
	Events         []*Event         `protobuf:"bytes,15,rep,name=events,proto3" json:"events,omitempty"`                                       // List of event declarations in the contract.
	Errors         []*Error         `protobuf:"bytes,16,rep,name=errors,proto3" json:"errors,omitempty"`                                       // List of error declarations in the contract.
	Constructor    *Constructor     `protobuf:"bytes,17,opt,name=constructor,proto3" json:"constructor,omitempty"`                             // Constructor declaration for the contract.
	Functions      []*Function      `protobuf:"bytes,18,rep,name=functions,proto3" json:"functions,omitempty"`                                 // List of function declarations in the contract.
	Fallback       *Fallback        `protobuf:"bytes,19,opt,name=fallback,proto3" json:"fallback,omitempty"`                                   // Fallback function declaration for the contract.
	Receive        *Receive         `protobuf:"bytes,20,opt,name=receive,proto3" json:"receive,omitempty"`                                     // Receive function declaration for the contract.
}

func (x *Contract) Reset() {
	*x = Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ir_contract_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contract) ProtoMessage() {}

func (x *Contract) ProtoReflect() protoreflect.Message {
	mi := &file_ir_contract_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contract.ProtoReflect.Descriptor instead.
func (*Contract) Descriptor() ([]byte, []int) {
	return file_ir_contract_proto_rawDescGZIP(), []int{0}
}

func (x *Contract) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Contract) GetNodeType() ast.NodeType {
	if x != nil {
		return x.NodeType
	}
	return ast.NodeType(0)
}

func (x *Contract) GetKind() ast.NodeType {
	if x != nil {
		return x.Kind
	}
	return ast.NodeType(0)
}

func (x *Contract) GetSourceUnitId() int64 {
	if x != nil {
		return x.SourceUnitId
	}
	return 0
}

func (x *Contract) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contract) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *Contract) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Contract) GetAbsolutePath() string {
	if x != nil {
		return x.AbsolutePath
	}
	return ""
}

func (x *Contract) GetSymbols() []*Symbol {
	if x != nil {
		return x.Symbols
	}
	return nil
}

func (x *Contract) GetImports() []*Import {
	if x != nil {
		return x.Imports
	}
	return nil
}

func (x *Contract) GetPragmas() []*Pragma {
	if x != nil {
		return x.Pragmas
	}
	return nil
}

func (x *Contract) GetStateVariables() []*StateVariable {
	if x != nil {
		return x.StateVariables
	}
	return nil
}

func (x *Contract) GetStructs() []*Struct {
	if x != nil {
		return x.Structs
	}
	return nil
}

func (x *Contract) GetEnums() []*Enum {
	if x != nil {
		return x.Enums
	}
	return nil
}

func (x *Contract) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Contract) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *Contract) GetConstructor() *Constructor {
	if x != nil {
		return x.Constructor
	}
	return nil
}

func (x *Contract) GetFunctions() []*Function {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *Contract) GetFallback() *Fallback {
	if x != nil {
		return x.Fallback
	}
	return nil
}

func (x *Contract) GetReceive() *Receive {
	if x != nil {
		return x.Receive
	}
	return nil
}

var File_ir_contract_proto protoreflect.FileDescriptor

var file_ir_contract_proto_rawDesc = []byte{
	0x0a, 0x11, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x69,
	0x72, 0x1a, 0x0f, 0x61, 0x73, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0f, 0x69, 0x72, 0x2f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x69, 0x72, 0x2f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x69, 0x72, 0x2f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x69, 0x72, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x69, 0x72, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x69, 0x72, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x69, 0x72, 0x2f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x69, 0x72, 0x2f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x69, 0x72, 0x2f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x69, 0x72, 0x2f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x06, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x07, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74,
	0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x72, 0x2e, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74,
	0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x72, 0x2e, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x07, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x70,
	0x72, 0x61, 0x67, 0x6d, 0x61, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74,
	0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x72, 0x2e, 0x50, 0x72, 0x61, 0x67,
	0x6d, 0x61, 0x52, 0x07, 0x70, 0x72, 0x61, 0x67, 0x6d, 0x61, 0x73, 0x12, 0x44, 0x0a, 0x0f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x69, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x69,
	0x72, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x73, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x72, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x78,
	0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x78, 0x70,
	0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x34, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x69, 0x72, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x66, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x78, 0x70,
	0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x72, 0x2e, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x08, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2f, 0x0a, 0x07,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x78, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x72, 0x2e, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x2e, 0x5a,
	0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x6e, 0x70, 0x61,
	0x63, 0x6b, 0x64, 0x65, 0x76, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x64, 0x69, 0x73,
	0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x69, 0x72, 0x3b, 0x69, 0x72, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ir_contract_proto_rawDescOnce sync.Once
	file_ir_contract_proto_rawDescData = file_ir_contract_proto_rawDesc
)

func file_ir_contract_proto_rawDescGZIP() []byte {
	file_ir_contract_proto_rawDescOnce.Do(func() {
		file_ir_contract_proto_rawDescData = protoimpl.X.CompressGZIP(file_ir_contract_proto_rawDescData)
	})
	return file_ir_contract_proto_rawDescData
}

var file_ir_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ir_contract_proto_goTypes = []interface{}{
	(*Contract)(nil),      // 0: txpull.v1.ir.Contract
	(ast.NodeType)(0),     // 1: txpull.v1.ast.NodeType
	(*Symbol)(nil),        // 2: txpull.v1.ir.Symbol
	(*Import)(nil),        // 3: txpull.v1.ir.Import
	(*Pragma)(nil),        // 4: txpull.v1.ir.Pragma
	(*StateVariable)(nil), // 5: txpull.v1.ir.StateVariable
	(*Struct)(nil),        // 6: txpull.v1.ir.Struct
	(*Enum)(nil),          // 7: txpull.v1.ir.Enum
	(*Event)(nil),         // 8: txpull.v1.ir.Event
	(*Error)(nil),         // 9: txpull.v1.ir.Error
	(*Constructor)(nil),   // 10: txpull.v1.ir.Constructor
	(*Function)(nil),      // 11: txpull.v1.ir.Function
	(*Fallback)(nil),      // 12: txpull.v1.ir.Fallback
	(*Receive)(nil),       // 13: txpull.v1.ir.Receive
}
var file_ir_contract_proto_depIdxs = []int32{
	1,  // 0: txpull.v1.ir.Contract.node_type:type_name -> txpull.v1.ast.NodeType
	1,  // 1: txpull.v1.ir.Contract.kind:type_name -> txpull.v1.ast.NodeType
	2,  // 2: txpull.v1.ir.Contract.symbols:type_name -> txpull.v1.ir.Symbol
	3,  // 3: txpull.v1.ir.Contract.imports:type_name -> txpull.v1.ir.Import
	4,  // 4: txpull.v1.ir.Contract.pragmas:type_name -> txpull.v1.ir.Pragma
	5,  // 5: txpull.v1.ir.Contract.state_variables:type_name -> txpull.v1.ir.StateVariable
	6,  // 6: txpull.v1.ir.Contract.structs:type_name -> txpull.v1.ir.Struct
	7,  // 7: txpull.v1.ir.Contract.enums:type_name -> txpull.v1.ir.Enum
	8,  // 8: txpull.v1.ir.Contract.events:type_name -> txpull.v1.ir.Event
	9,  // 9: txpull.v1.ir.Contract.errors:type_name -> txpull.v1.ir.Error
	10, // 10: txpull.v1.ir.Contract.constructor:type_name -> txpull.v1.ir.Constructor
	11, // 11: txpull.v1.ir.Contract.functions:type_name -> txpull.v1.ir.Function
	12, // 12: txpull.v1.ir.Contract.fallback:type_name -> txpull.v1.ir.Fallback
	13, // 13: txpull.v1.ir.Contract.receive:type_name -> txpull.v1.ir.Receive
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_ir_contract_proto_init() }
func file_ir_contract_proto_init() {
	if File_ir_contract_proto != nil {
		return
	}
	file_ir_symbol_proto_init()
	file_ir_import_proto_init()
	file_ir_pragma_proto_init()
	file_ir_variable_proto_init()
	file_ir_struct_proto_init()
	file_ir_enum_proto_init()
	file_ir_event_proto_init()
	file_ir_error_proto_init()
	file_ir_constructor_proto_init()
	file_ir_function_proto_init()
	file_ir_fallback_proto_init()
	file_ir_receive_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ir_contract_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ir_contract_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ir_contract_proto_goTypes,
		DependencyIndexes: file_ir_contract_proto_depIdxs,
		MessageInfos:      file_ir_contract_proto_msgTypes,
	}.Build()
	File_ir_contract_proto = out.File
	file_ir_contract_proto_rawDesc = nil
	file_ir_contract_proto_goTypes = nil
	file_ir_contract_proto_depIdxs = nil
}
