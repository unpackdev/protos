// source: eip/discovery.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var eip_standards_pb = require('../eip/standards_pb.js');
goog.object.extend(proto, eip_standards_pb);
var eip_eip_pb = require('../eip/eip_pb.js');
goog.object.extend(proto, eip_eip_pb);
goog.exportSymbol('proto.txpull.v1.eip.ConfidenceLevel', null, global);
goog.exportSymbol('proto.txpull.v1.eip.ConfidenceThreshold', null, global);
goog.exportSymbol('proto.txpull.v1.eip.Discovery', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.eip.Discovery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.txpull.v1.eip.Discovery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.eip.Discovery.displayName = 'proto.txpull.v1.eip.Discovery';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.eip.Discovery.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.eip.Discovery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.eip.Discovery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.eip.Discovery.toObject = function(includeInstance, msg) {
  var f, obj = {
    standard: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confidence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    confidencePoints: jspb.Message.getFieldWithDefault(msg, 3, 0),
    threshold: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maximumTokens: jspb.Message.getFieldWithDefault(msg, 5, 0),
    discoveredTokens: jspb.Message.getFieldWithDefault(msg, 6, 0),
    contract: (f = msg.getContract()) && eip_eip_pb.Contract.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.eip.Discovery}
 */
proto.txpull.v1.eip.Discovery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.eip.Discovery;
  return proto.txpull.v1.eip.Discovery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.eip.Discovery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.eip.Discovery}
 */
proto.txpull.v1.eip.Discovery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.txpull.v1.eip.Standard} */ (reader.readEnum());
      msg.setStandard(value);
      break;
    case 2:
      var value = /** @type {!proto.txpull.v1.eip.ConfidenceLevel} */ (reader.readEnum());
      msg.setConfidence(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConfidencePoints(value);
      break;
    case 4:
      var value = /** @type {!proto.txpull.v1.eip.ConfidenceThreshold} */ (reader.readEnum());
      msg.setThreshold(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaximumTokens(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDiscoveredTokens(value);
      break;
    case 7:
      var value = new eip_eip_pb.Contract;
      reader.readMessage(value,eip_eip_pb.Contract.deserializeBinaryFromReader);
      msg.setContract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.eip.Discovery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.eip.Discovery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.eip.Discovery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.eip.Discovery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStandard();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getConfidencePoints();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getThreshold();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getMaximumTokens();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getDiscoveredTokens();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getContract();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      eip_eip_pb.Contract.serializeBinaryToWriter
    );
  }
};


/**
 * optional Standard standard = 1;
 * @return {!proto.txpull.v1.eip.Standard}
 */
proto.txpull.v1.eip.Discovery.prototype.getStandard = function() {
  return /** @type {!proto.txpull.v1.eip.Standard} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.txpull.v1.eip.Standard} value
 * @return {!proto.txpull.v1.eip.Discovery} returns this
 */
proto.txpull.v1.eip.Discovery.prototype.setStandard = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ConfidenceLevel confidence = 2;
 * @return {!proto.txpull.v1.eip.ConfidenceLevel}
 */
proto.txpull.v1.eip.Discovery.prototype.getConfidence = function() {
  return /** @type {!proto.txpull.v1.eip.ConfidenceLevel} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.txpull.v1.eip.ConfidenceLevel} value
 * @return {!proto.txpull.v1.eip.Discovery} returns this
 */
proto.txpull.v1.eip.Discovery.prototype.setConfidence = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 confidence_points = 3;
 * @return {number}
 */
proto.txpull.v1.eip.Discovery.prototype.getConfidencePoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.eip.Discovery} returns this
 */
proto.txpull.v1.eip.Discovery.prototype.setConfidencePoints = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional ConfidenceThreshold threshold = 4;
 * @return {!proto.txpull.v1.eip.ConfidenceThreshold}
 */
proto.txpull.v1.eip.Discovery.prototype.getThreshold = function() {
  return /** @type {!proto.txpull.v1.eip.ConfidenceThreshold} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.txpull.v1.eip.ConfidenceThreshold} value
 * @return {!proto.txpull.v1.eip.Discovery} returns this
 */
proto.txpull.v1.eip.Discovery.prototype.setThreshold = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional int32 maximum_tokens = 5;
 * @return {number}
 */
proto.txpull.v1.eip.Discovery.prototype.getMaximumTokens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.eip.Discovery} returns this
 */
proto.txpull.v1.eip.Discovery.prototype.setMaximumTokens = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 discovered_tokens = 6;
 * @return {number}
 */
proto.txpull.v1.eip.Discovery.prototype.getDiscoveredTokens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.eip.Discovery} returns this
 */
proto.txpull.v1.eip.Discovery.prototype.setDiscoveredTokens = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional Contract contract = 7;
 * @return {?proto.txpull.v1.eip.Contract}
 */
proto.txpull.v1.eip.Discovery.prototype.getContract = function() {
  return /** @type{?proto.txpull.v1.eip.Contract} */ (
    jspb.Message.getWrapperField(this, eip_eip_pb.Contract, 7));
};


/**
 * @param {?proto.txpull.v1.eip.Contract|undefined} value
 * @return {!proto.txpull.v1.eip.Discovery} returns this
*/
proto.txpull.v1.eip.Discovery.prototype.setContract = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.eip.Discovery} returns this
 */
proto.txpull.v1.eip.Discovery.prototype.clearContract = function() {
  return this.setContract(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.eip.Discovery.prototype.hasContract = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * @enum {number}
 */
proto.txpull.v1.eip.ConfidenceLevel = {
  NO_CONFIDENCE: 0,
  HIGH_CONFIDENCE: 3,
  MEDIUM_CONFIDENCE: 2,
  LOW_CONFIDENCE: 1
};

/**
 * @enum {number}
 */
proto.txpull.v1.eip.ConfidenceThreshold = {
  NO_CONFIDENCE_THRESHOLD: 0,
  HIGH_CONFIDENCE_THRESHOLD: 900,
  MEDIUM_CONFIDENCE_THRESHOLD: 500,
  LOW_CONFIDENCE_THRESHOLD: 100
};

goog.object.extend(exports, proto.txpull.v1.eip);
