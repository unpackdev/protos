// source: metadata/metadata.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_status_pb = require('../common/status_pb.js');
goog.object.extend(proto, common_status_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.unpack.v1.metadata.BytecodeMetadata', null, global);
goog.exportSymbol('proto.unpack.v1.metadata.Metadata', null, global);
goog.exportSymbol('proto.unpack.v1.metadata.Metadata.Compiler', null, global);
goog.exportSymbol('proto.unpack.v1.metadata.Metadata.Output', null, global);
goog.exportSymbol('proto.unpack.v1.metadata.Metadata.Settings', null, global);
goog.exportSymbol('proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings', null, global);
goog.exportSymbol('proto.unpack.v1.metadata.Metadata.Settings.Optimizer', null, global);
goog.exportSymbol('proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details', null, global);
goog.exportSymbol('proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails', null, global);
goog.exportSymbol('proto.unpack.v1.metadata.Metadata.Source', null, global);
goog.exportSymbol('proto.unpack.v1.metadata.MetadataRequest', null, global);
goog.exportSymbol('proto.unpack.v1.metadata.MetadataResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unpack.v1.metadata.BytecodeMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.unpack.v1.metadata.BytecodeMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unpack.v1.metadata.BytecodeMetadata.displayName = 'proto.unpack.v1.metadata.BytecodeMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unpack.v1.metadata.MetadataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.unpack.v1.metadata.MetadataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unpack.v1.metadata.MetadataRequest.displayName = 'proto.unpack.v1.metadata.MetadataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unpack.v1.metadata.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.unpack.v1.metadata.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unpack.v1.metadata.Metadata.displayName = 'proto.unpack.v1.metadata.Metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unpack.v1.metadata.Metadata.Compiler = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.unpack.v1.metadata.Metadata.Compiler, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unpack.v1.metadata.Metadata.Compiler.displayName = 'proto.unpack.v1.metadata.Metadata.Compiler';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unpack.v1.metadata.Metadata.Settings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.unpack.v1.metadata.Metadata.Settings.repeatedFields_, null);
};
goog.inherits(proto.unpack.v1.metadata.Metadata.Settings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unpack.v1.metadata.Metadata.Settings.displayName = 'proto.unpack.v1.metadata.Metadata.Settings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.displayName = 'proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.unpack.v1.metadata.Metadata.Settings.Optimizer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unpack.v1.metadata.Metadata.Settings.Optimizer.displayName = 'proto.unpack.v1.metadata.Metadata.Settings.Optimizer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.displayName = 'proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.displayName = 'proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unpack.v1.metadata.Metadata.Output = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.unpack.v1.metadata.Metadata.Output, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unpack.v1.metadata.Metadata.Output.displayName = 'proto.unpack.v1.metadata.Metadata.Output';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unpack.v1.metadata.Metadata.Source = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.unpack.v1.metadata.Metadata.Source.repeatedFields_, null);
};
goog.inherits(proto.unpack.v1.metadata.Metadata.Source, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unpack.v1.metadata.Metadata.Source.displayName = 'proto.unpack.v1.metadata.Metadata.Source';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.unpack.v1.metadata.MetadataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.unpack.v1.metadata.MetadataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.unpack.v1.metadata.MetadataResponse.displayName = 'proto.unpack.v1.metadata.MetadataResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.unpack.v1.metadata.BytecodeMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unpack.v1.metadata.BytecodeMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.BytecodeMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    executionBytecode: msg.getExecutionBytecode_asB64(),
    cborLength: jspb.Message.getFieldWithDefault(msg, 2, 0),
    raw: msg.getRaw_asB64(),
    ipfs: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bzzr1: jspb.Message.getFieldWithDefault(msg, 5, ""),
    bzzr0: jspb.Message.getFieldWithDefault(msg, 6, ""),
    experimental: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    solc: jspb.Message.getFieldWithDefault(msg, 8, ""),
    solgo: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unpack.v1.metadata.BytecodeMetadata}
 */
proto.unpack.v1.metadata.BytecodeMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unpack.v1.metadata.BytecodeMetadata;
  return proto.unpack.v1.metadata.BytecodeMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unpack.v1.metadata.BytecodeMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unpack.v1.metadata.BytecodeMetadata}
 */
proto.unpack.v1.metadata.BytecodeMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setExecutionBytecode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCborLength(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRaw(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpfs(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBzzr1(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBzzr0(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExperimental(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSolc(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSolgo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unpack.v1.metadata.BytecodeMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unpack.v1.metadata.BytecodeMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.BytecodeMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecutionBytecode_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getCborLength();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getRaw_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getIpfs();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBzzr1();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBzzr0();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getExperimental();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getSolc();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSolgo();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional bytes execution_bytecode = 1;
 * @return {!(string|Uint8Array)}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.getExecutionBytecode = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes execution_bytecode = 1;
 * This is a type-conversion wrapper around `getExecutionBytecode()`
 * @return {string}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.getExecutionBytecode_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getExecutionBytecode()));
};


/**
 * optional bytes execution_bytecode = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getExecutionBytecode()`
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.getExecutionBytecode_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getExecutionBytecode()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.unpack.v1.metadata.BytecodeMetadata} returns this
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.setExecutionBytecode = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 cbor_length = 2;
 * @return {number}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.getCborLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.unpack.v1.metadata.BytecodeMetadata} returns this
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.setCborLength = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes raw = 3;
 * @return {!(string|Uint8Array)}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.getRaw = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes raw = 3;
 * This is a type-conversion wrapper around `getRaw()`
 * @return {string}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.getRaw_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRaw()));
};


/**
 * optional bytes raw = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRaw()`
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.getRaw_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRaw()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.unpack.v1.metadata.BytecodeMetadata} returns this
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.setRaw = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string ipfs = 4;
 * @return {string}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.getIpfs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.BytecodeMetadata} returns this
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.setIpfs = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string bzzr1 = 5;
 * @return {string}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.getBzzr1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.BytecodeMetadata} returns this
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.setBzzr1 = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string bzzr0 = 6;
 * @return {string}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.getBzzr0 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.BytecodeMetadata} returns this
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.setBzzr0 = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool experimental = 7;
 * @return {boolean}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.getExperimental = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unpack.v1.metadata.BytecodeMetadata} returns this
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.setExperimental = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string solc = 8;
 * @return {string}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.getSolc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.BytecodeMetadata} returns this
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.setSolc = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string solgo = 9;
 * @return {string}
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.getSolgo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.BytecodeMetadata} returns this
 */
proto.unpack.v1.metadata.BytecodeMetadata.prototype.setSolgo = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unpack.v1.metadata.MetadataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.unpack.v1.metadata.MetadataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unpack.v1.metadata.MetadataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.MetadataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bytecode: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unpack.v1.metadata.MetadataRequest}
 */
proto.unpack.v1.metadata.MetadataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unpack.v1.metadata.MetadataRequest;
  return proto.unpack.v1.metadata.MetadataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unpack.v1.metadata.MetadataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unpack.v1.metadata.MetadataRequest}
 */
proto.unpack.v1.metadata.MetadataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBytecode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.MetadataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unpack.v1.metadata.MetadataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unpack.v1.metadata.MetadataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.MetadataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBytecode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 chain_id = 1;
 * @return {number}
 */
proto.unpack.v1.metadata.MetadataRequest.prototype.getChainId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.unpack.v1.metadata.MetadataRequest} returns this
 */
proto.unpack.v1.metadata.MetadataRequest.prototype.setChainId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.unpack.v1.metadata.MetadataRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.MetadataRequest} returns this
 */
proto.unpack.v1.metadata.MetadataRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bytecode = 3;
 * @return {string}
 */
proto.unpack.v1.metadata.MetadataRequest.prototype.getBytecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.MetadataRequest} returns this
 */
proto.unpack.v1.metadata.MetadataRequest.prototype.setBytecode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unpack.v1.metadata.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.unpack.v1.metadata.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unpack.v1.metadata.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    raw: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0),
    compiler: (f = msg.getCompiler()) && proto.unpack.v1.metadata.Metadata.Compiler.toObject(includeInstance, f),
    language: jspb.Message.getFieldWithDefault(msg, 4, ""),
    settings: (f = msg.getSettings()) && proto.unpack.v1.metadata.Metadata.Settings.toObject(includeInstance, f),
    output: (f = msg.getOutput()) && proto.unpack.v1.metadata.Metadata.Output.toObject(includeInstance, f),
    sourcesMap: (f = msg.getSourcesMap()) ? f.toObject(includeInstance, proto.unpack.v1.metadata.Metadata.Source.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unpack.v1.metadata.Metadata}
 */
proto.unpack.v1.metadata.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unpack.v1.metadata.Metadata;
  return proto.unpack.v1.metadata.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unpack.v1.metadata.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unpack.v1.metadata.Metadata}
 */
proto.unpack.v1.metadata.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRaw(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 3:
      var value = new proto.unpack.v1.metadata.Metadata.Compiler;
      reader.readMessage(value,proto.unpack.v1.metadata.Metadata.Compiler.deserializeBinaryFromReader);
      msg.setCompiler(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 5:
      var value = new proto.unpack.v1.metadata.Metadata.Settings;
      reader.readMessage(value,proto.unpack.v1.metadata.Metadata.Settings.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    case 6:
      var value = new proto.unpack.v1.metadata.Metadata.Output;
      reader.readMessage(value,proto.unpack.v1.metadata.Metadata.Output.deserializeBinaryFromReader);
      msg.setOutput(value);
      break;
    case 7:
      var value = msg.getSourcesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.unpack.v1.metadata.Metadata.Source.deserializeBinaryFromReader, "", new proto.unpack.v1.metadata.Metadata.Source());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unpack.v1.metadata.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unpack.v1.metadata.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRaw();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCompiler();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.unpack.v1.metadata.Metadata.Compiler.serializeBinaryToWriter
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.unpack.v1.metadata.Metadata.Settings.serializeBinaryToWriter
    );
  }
  f = message.getOutput();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.unpack.v1.metadata.Metadata.Output.serializeBinaryToWriter
    );
  }
  f = message.getSourcesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.unpack.v1.metadata.Metadata.Source.serializeBinaryToWriter);
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unpack.v1.metadata.Metadata.Compiler.prototype.toObject = function(opt_includeInstance) {
  return proto.unpack.v1.metadata.Metadata.Compiler.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unpack.v1.metadata.Metadata.Compiler} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Compiler.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, ""),
    keccak256: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unpack.v1.metadata.Metadata.Compiler}
 */
proto.unpack.v1.metadata.Metadata.Compiler.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unpack.v1.metadata.Metadata.Compiler;
  return proto.unpack.v1.metadata.Metadata.Compiler.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unpack.v1.metadata.Metadata.Compiler} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unpack.v1.metadata.Metadata.Compiler}
 */
proto.unpack.v1.metadata.Metadata.Compiler.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeccak256(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.Metadata.Compiler.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unpack.v1.metadata.Metadata.Compiler.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unpack.v1.metadata.Metadata.Compiler} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Compiler.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKeccak256();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.unpack.v1.metadata.Metadata.Compiler.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.Metadata.Compiler} returns this
 */
proto.unpack.v1.metadata.Metadata.Compiler.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string keccak256 = 2;
 * @return {string}
 */
proto.unpack.v1.metadata.Metadata.Compiler.prototype.getKeccak256 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.Metadata.Compiler} returns this
 */
proto.unpack.v1.metadata.Metadata.Compiler.prototype.setKeccak256 = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.unpack.v1.metadata.Metadata.Settings.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.toObject = function(opt_includeInstance) {
  return proto.unpack.v1.metadata.Metadata.Settings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unpack.v1.metadata.Metadata.Settings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Settings.toObject = function(includeInstance, msg) {
  var f, obj = {
    evmVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    compilationTargetMap: (f = msg.getCompilationTargetMap()) ? f.toObject(includeInstance, undefined) : [],
    librariesMap: (f = msg.getLibrariesMap()) ? f.toObject(includeInstance, undefined) : [],
    remappingsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    metadata: (f = msg.getMetadata()) && proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.toObject(includeInstance, f),
    optimizer: (f = msg.getOptimizer()) && proto.unpack.v1.metadata.Metadata.Settings.Optimizer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings}
 */
proto.unpack.v1.metadata.Metadata.Settings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unpack.v1.metadata.Metadata.Settings;
  return proto.unpack.v1.metadata.Metadata.Settings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unpack.v1.metadata.Metadata.Settings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings}
 */
proto.unpack.v1.metadata.Metadata.Settings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvmVersion(value);
      break;
    case 2:
      var value = msg.getCompilationTargetMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 3:
      var value = msg.getLibrariesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addRemappings(value);
      break;
    case 5:
      var value = new proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings;
      reader.readMessage(value,proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 6:
      var value = new proto.unpack.v1.metadata.Metadata.Settings.Optimizer;
      reader.readMessage(value,proto.unpack.v1.metadata.Metadata.Settings.Optimizer.deserializeBinaryFromReader);
      msg.setOptimizer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unpack.v1.metadata.Metadata.Settings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unpack.v1.metadata.Metadata.Settings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Settings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvmVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCompilationTargetMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getLibrariesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getRemappingsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.serializeBinaryToWriter
    );
  }
  f = message.getOptimizer();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.unpack.v1.metadata.Metadata.Settings.Optimizer.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    bytecodeHash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    useLiteralContent: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    appendCbor: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings}
 */
proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings;
  return proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings}
 */
proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBytecodeHash(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseLiteralContent(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAppendCbor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBytecodeHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUseLiteralContent();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getAppendCbor();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string bytecode_hash = 1;
 * @return {string}
 */
proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.prototype.getBytecodeHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.prototype.setBytecodeHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool use_literal_content = 2;
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.prototype.getUseLiteralContent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.prototype.setUseLiteralContent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool append_cbor = 3;
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.prototype.getAppendCbor = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings.prototype.setAppendCbor = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.prototype.toObject = function(opt_includeInstance) {
  return proto.unpack.v1.metadata.Metadata.Settings.Optimizer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    runs: jspb.Message.getFieldWithDefault(msg, 2, 0),
    details: (f = msg.getDetails()) && proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unpack.v1.metadata.Metadata.Settings.Optimizer;
  return proto.unpack.v1.metadata.Metadata.Settings.Optimizer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRuns(value);
      break;
    case 3:
      var value = new proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details;
      reader.readMessage(value,proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unpack.v1.metadata.Metadata.Settings.Optimizer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRuns();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.toObject = function(opt_includeInstance) {
  return proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.toObject = function(includeInstance, msg) {
  var f, obj = {
    peephole: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    inliner: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    jumpdestRemover: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    orderLiterals: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    deduplicate: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    cse: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    constantOptimizer: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    yul: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    yulDetails: (f = msg.getYulDetails()) && proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details;
  return proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPeephole(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInliner(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJumpdestRemover(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOrderLiterals(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeduplicate(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCse(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConstantOptimizer(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setYul(value);
      break;
    case 9:
      var value = new proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails;
      reader.readMessage(value,proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.deserializeBinaryFromReader);
      msg.setYulDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeephole();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getInliner();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getJumpdestRemover();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getOrderLiterals();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDeduplicate();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCse();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getConstantOptimizer();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getYul();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getYulDetails();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    stackAllocation: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    optimizerSteps: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails;
  return proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStackAllocation(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOptimizerSteps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStackAllocation();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getOptimizerSteps();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional bool stack_allocation = 1;
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.prototype.getStackAllocation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.prototype.setStackAllocation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 optimizer_steps = 2;
 * @return {number}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.prototype.getOptimizerSteps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails.prototype.setOptimizerSteps = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool peephole = 1;
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.getPeephole = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.setPeephole = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool inliner = 2;
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.getInliner = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.setInliner = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool jumpdest_remover = 3;
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.getJumpdestRemover = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.setJumpdestRemover = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool order_literals = 4;
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.getOrderLiterals = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.setOrderLiterals = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool deduplicate = 5;
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.getDeduplicate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.setDeduplicate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool cse = 6;
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.getCse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.setCse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool constant_optimizer = 7;
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.getConstantOptimizer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.setConstantOptimizer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool yul = 8;
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.getYul = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.setYul = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional YulDetails yul_details = 9;
 * @return {?proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.getYulDetails = function() {
  return /** @type{?proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails} */ (
    jspb.Message.getWrapperField(this, proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails, 9));
};


/**
 * @param {?proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.YulDetails|undefined} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} returns this
*/
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.setYulDetails = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.clearYulDetails = function() {
  return this.setYulDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details.prototype.hasYulDetails = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 runs = 2;
 * @return {number}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.prototype.getRuns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.prototype.setRuns = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Details details = 3;
 * @return {?proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.prototype.getDetails = function() {
  return /** @type{?proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details} */ (
    jspb.Message.getWrapperField(this, proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details, 3));
};


/**
 * @param {?proto.unpack.v1.metadata.Metadata.Settings.Optimizer.Details|undefined} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer} returns this
*/
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.prototype.setDetails = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings.Optimizer} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.prototype.clearDetails = function() {
  return this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.Optimizer.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string evm_version = 1;
 * @return {string}
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.getEvmVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.setEvmVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> compilation_target = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.getCompilationTargetMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.clearCompilationTargetMap = function() {
  this.getCompilationTargetMap().clear();
  return this;};


/**
 * map<string, string> libraries = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.getLibrariesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.clearLibrariesMap = function() {
  this.getLibrariesMap().clear();
  return this;};


/**
 * repeated string remappings = 4;
 * @return {!Array<string>}
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.getRemappingsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.setRemappingsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.unpack.v1.metadata.Metadata.Settings} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.addRemappings = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.clearRemappingsList = function() {
  return this.setRemappingsList([]);
};


/**
 * optional MetadataSettings metadata = 5;
 * @return {?proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings}
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.getMetadata = function() {
  return /** @type{?proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings} */ (
    jspb.Message.getWrapperField(this, proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings, 5));
};


/**
 * @param {?proto.unpack.v1.metadata.Metadata.Settings.MetadataSettings|undefined} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings} returns this
*/
proto.unpack.v1.metadata.Metadata.Settings.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Optimizer optimizer = 6;
 * @return {?proto.unpack.v1.metadata.Metadata.Settings.Optimizer}
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.getOptimizer = function() {
  return /** @type{?proto.unpack.v1.metadata.Metadata.Settings.Optimizer} */ (
    jspb.Message.getWrapperField(this, proto.unpack.v1.metadata.Metadata.Settings.Optimizer, 6));
};


/**
 * @param {?proto.unpack.v1.metadata.Metadata.Settings.Optimizer|undefined} value
 * @return {!proto.unpack.v1.metadata.Metadata.Settings} returns this
*/
proto.unpack.v1.metadata.Metadata.Settings.prototype.setOptimizer = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.unpack.v1.metadata.Metadata.Settings} returns this
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.clearOptimizer = function() {
  return this.setOptimizer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Settings.prototype.hasOptimizer = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unpack.v1.metadata.Metadata.Output.prototype.toObject = function(opt_includeInstance) {
  return proto.unpack.v1.metadata.Metadata.Output.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unpack.v1.metadata.Metadata.Output} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Output.toObject = function(includeInstance, msg) {
  var f, obj = {
    abi: (f = msg.getAbi()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unpack.v1.metadata.Metadata.Output}
 */
proto.unpack.v1.metadata.Metadata.Output.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unpack.v1.metadata.Metadata.Output;
  return proto.unpack.v1.metadata.Metadata.Output.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unpack.v1.metadata.Metadata.Output} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unpack.v1.metadata.Metadata.Output}
 */
proto.unpack.v1.metadata.Metadata.Output.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setAbi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.Metadata.Output.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unpack.v1.metadata.Metadata.Output.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unpack.v1.metadata.Metadata.Output} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Output.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAbi();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any abi = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.unpack.v1.metadata.Metadata.Output.prototype.getAbi = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.unpack.v1.metadata.Metadata.Output} returns this
*/
proto.unpack.v1.metadata.Metadata.Output.prototype.setAbi = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.unpack.v1.metadata.Metadata.Output} returns this
 */
proto.unpack.v1.metadata.Metadata.Output.prototype.clearAbi = function() {
  return this.setAbi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.Output.prototype.hasAbi = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.unpack.v1.metadata.Metadata.Source.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unpack.v1.metadata.Metadata.Source.prototype.toObject = function(opt_includeInstance) {
  return proto.unpack.v1.metadata.Metadata.Source.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unpack.v1.metadata.Metadata.Source} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Source.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: jspb.Message.getFieldWithDefault(msg, 1, ""),
    keccak256: jspb.Message.getFieldWithDefault(msg, 2, ""),
    license: jspb.Message.getFieldWithDefault(msg, 3, ""),
    urlsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unpack.v1.metadata.Metadata.Source}
 */
proto.unpack.v1.metadata.Metadata.Source.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unpack.v1.metadata.Metadata.Source;
  return proto.unpack.v1.metadata.Metadata.Source.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unpack.v1.metadata.Metadata.Source} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unpack.v1.metadata.Metadata.Source}
 */
proto.unpack.v1.metadata.Metadata.Source.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeccak256(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicense(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addUrls(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.Metadata.Source.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unpack.v1.metadata.Metadata.Source.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unpack.v1.metadata.Metadata.Source} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.Metadata.Source.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKeccak256();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLicense();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string content = 1;
 * @return {string}
 */
proto.unpack.v1.metadata.Metadata.Source.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.Metadata.Source} returns this
 */
proto.unpack.v1.metadata.Metadata.Source.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string keccak256 = 2;
 * @return {string}
 */
proto.unpack.v1.metadata.Metadata.Source.prototype.getKeccak256 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.Metadata.Source} returns this
 */
proto.unpack.v1.metadata.Metadata.Source.prototype.setKeccak256 = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string license = 3;
 * @return {string}
 */
proto.unpack.v1.metadata.Metadata.Source.prototype.getLicense = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.Metadata.Source} returns this
 */
proto.unpack.v1.metadata.Metadata.Source.prototype.setLicense = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string urls = 4;
 * @return {!Array<string>}
 */
proto.unpack.v1.metadata.Metadata.Source.prototype.getUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.unpack.v1.metadata.Metadata.Source} returns this
 */
proto.unpack.v1.metadata.Metadata.Source.prototype.setUrlsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.unpack.v1.metadata.Metadata.Source} returns this
 */
proto.unpack.v1.metadata.Metadata.Source.prototype.addUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.unpack.v1.metadata.Metadata.Source} returns this
 */
proto.unpack.v1.metadata.Metadata.Source.prototype.clearUrlsList = function() {
  return this.setUrlsList([]);
};


/**
 * optional string raw = 1;
 * @return {string}
 */
proto.unpack.v1.metadata.Metadata.prototype.getRaw = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.Metadata} returns this
 */
proto.unpack.v1.metadata.Metadata.prototype.setRaw = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 version = 2;
 * @return {number}
 */
proto.unpack.v1.metadata.Metadata.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.unpack.v1.metadata.Metadata} returns this
 */
proto.unpack.v1.metadata.Metadata.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Compiler compiler = 3;
 * @return {?proto.unpack.v1.metadata.Metadata.Compiler}
 */
proto.unpack.v1.metadata.Metadata.prototype.getCompiler = function() {
  return /** @type{?proto.unpack.v1.metadata.Metadata.Compiler} */ (
    jspb.Message.getWrapperField(this, proto.unpack.v1.metadata.Metadata.Compiler, 3));
};


/**
 * @param {?proto.unpack.v1.metadata.Metadata.Compiler|undefined} value
 * @return {!proto.unpack.v1.metadata.Metadata} returns this
*/
proto.unpack.v1.metadata.Metadata.prototype.setCompiler = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.unpack.v1.metadata.Metadata} returns this
 */
proto.unpack.v1.metadata.Metadata.prototype.clearCompiler = function() {
  return this.setCompiler(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.prototype.hasCompiler = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string language = 4;
 * @return {string}
 */
proto.unpack.v1.metadata.Metadata.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.Metadata} returns this
 */
proto.unpack.v1.metadata.Metadata.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Settings settings = 5;
 * @return {?proto.unpack.v1.metadata.Metadata.Settings}
 */
proto.unpack.v1.metadata.Metadata.prototype.getSettings = function() {
  return /** @type{?proto.unpack.v1.metadata.Metadata.Settings} */ (
    jspb.Message.getWrapperField(this, proto.unpack.v1.metadata.Metadata.Settings, 5));
};


/**
 * @param {?proto.unpack.v1.metadata.Metadata.Settings|undefined} value
 * @return {!proto.unpack.v1.metadata.Metadata} returns this
*/
proto.unpack.v1.metadata.Metadata.prototype.setSettings = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.unpack.v1.metadata.Metadata} returns this
 */
proto.unpack.v1.metadata.Metadata.prototype.clearSettings = function() {
  return this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Output output = 6;
 * @return {?proto.unpack.v1.metadata.Metadata.Output}
 */
proto.unpack.v1.metadata.Metadata.prototype.getOutput = function() {
  return /** @type{?proto.unpack.v1.metadata.Metadata.Output} */ (
    jspb.Message.getWrapperField(this, proto.unpack.v1.metadata.Metadata.Output, 6));
};


/**
 * @param {?proto.unpack.v1.metadata.Metadata.Output|undefined} value
 * @return {!proto.unpack.v1.metadata.Metadata} returns this
*/
proto.unpack.v1.metadata.Metadata.prototype.setOutput = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.unpack.v1.metadata.Metadata} returns this
 */
proto.unpack.v1.metadata.Metadata.prototype.clearOutput = function() {
  return this.setOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.unpack.v1.metadata.Metadata.prototype.hasOutput = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * map<string, Source> sources = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.unpack.v1.metadata.Metadata.Source>}
 */
proto.unpack.v1.metadata.Metadata.prototype.getSourcesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.unpack.v1.metadata.Metadata.Source>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      proto.unpack.v1.metadata.Metadata.Source));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.unpack.v1.metadata.Metadata} returns this
 */
proto.unpack.v1.metadata.Metadata.prototype.clearSourcesMap = function() {
  this.getSourcesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.unpack.v1.metadata.MetadataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.unpack.v1.metadata.MetadataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.MetadataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && common_status_pb.Status.toObject(includeInstance, f),
    chainId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bytecode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bytecodeMetadata: (f = msg.getBytecodeMetadata()) && proto.unpack.v1.metadata.BytecodeMetadata.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && proto.unpack.v1.metadata.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.unpack.v1.metadata.MetadataResponse}
 */
proto.unpack.v1.metadata.MetadataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.unpack.v1.metadata.MetadataResponse;
  return proto.unpack.v1.metadata.MetadataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.unpack.v1.metadata.MetadataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.unpack.v1.metadata.MetadataResponse}
 */
proto.unpack.v1.metadata.MetadataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_status_pb.Status;
      reader.readMessage(value,common_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChainId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBytecode(value);
      break;
    case 5:
      var value = new proto.unpack.v1.metadata.BytecodeMetadata;
      reader.readMessage(value,proto.unpack.v1.metadata.BytecodeMetadata.deserializeBinaryFromReader);
      msg.setBytecodeMetadata(value);
      break;
    case 6:
      var value = new proto.unpack.v1.metadata.Metadata;
      reader.readMessage(value,proto.unpack.v1.metadata.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.unpack.v1.metadata.MetadataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.unpack.v1.metadata.MetadataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.unpack.v1.metadata.MetadataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getChainId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBytecode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBytecodeMetadata();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.unpack.v1.metadata.BytecodeMetadata.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.unpack.v1.metadata.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional unpack.v1.common.Status status = 1;
 * @return {?proto.unpack.v1.common.Status}
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.getStatus = function() {
  return /** @type{?proto.unpack.v1.common.Status} */ (
    jspb.Message.getWrapperField(this, common_status_pb.Status, 1));
};


/**
 * @param {?proto.unpack.v1.common.Status|undefined} value
 * @return {!proto.unpack.v1.metadata.MetadataResponse} returns this
*/
proto.unpack.v1.metadata.MetadataResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.unpack.v1.metadata.MetadataResponse} returns this
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 chain_id = 2;
 * @return {number}
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.getChainId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.unpack.v1.metadata.MetadataResponse} returns this
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.setChainId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.MetadataResponse} returns this
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string bytecode = 4;
 * @return {string}
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.getBytecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.unpack.v1.metadata.MetadataResponse} returns this
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.setBytecode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional BytecodeMetadata bytecode_metadata = 5;
 * @return {?proto.unpack.v1.metadata.BytecodeMetadata}
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.getBytecodeMetadata = function() {
  return /** @type{?proto.unpack.v1.metadata.BytecodeMetadata} */ (
    jspb.Message.getWrapperField(this, proto.unpack.v1.metadata.BytecodeMetadata, 5));
};


/**
 * @param {?proto.unpack.v1.metadata.BytecodeMetadata|undefined} value
 * @return {!proto.unpack.v1.metadata.MetadataResponse} returns this
*/
proto.unpack.v1.metadata.MetadataResponse.prototype.setBytecodeMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.unpack.v1.metadata.MetadataResponse} returns this
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.clearBytecodeMetadata = function() {
  return this.setBytecodeMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.hasBytecodeMetadata = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Metadata metadata = 6;
 * @return {?proto.unpack.v1.metadata.Metadata}
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.getMetadata = function() {
  return /** @type{?proto.unpack.v1.metadata.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.unpack.v1.metadata.Metadata, 6));
};


/**
 * @param {?proto.unpack.v1.metadata.Metadata|undefined} value
 * @return {!proto.unpack.v1.metadata.MetadataResponse} returns this
*/
proto.unpack.v1.metadata.MetadataResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.unpack.v1.metadata.MetadataResponse} returns this
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.unpack.v1.metadata.MetadataResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.unpack.v1.metadata);
