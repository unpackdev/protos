// source: unpack/contract.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var unpack_types_pb = require('../unpack/types_pb.js');
goog.object.extend(proto, unpack_types_pb);
goog.exportSymbol('proto.txpull.v1.unpack.Company', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.Constructor', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.ConstructorArgument', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.Contract', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.ContractLanguage', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.ContractType', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.Metadata', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.Optimizer', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.OptimizerDetails', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.ReceiptStatus', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.Social', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.Source', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.SourceDetails', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.SyntaxError', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.VerificationStatus', null, global);
goog.exportSymbol('proto.txpull.v1.unpack.YulDetails', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.unpack.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.txpull.v1.unpack.Metadata.repeatedFields_, null);
};
goog.inherits(proto.txpull.v1.unpack.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.unpack.Metadata.displayName = 'proto.txpull.v1.unpack.Metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.unpack.YulDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.txpull.v1.unpack.YulDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.unpack.YulDetails.displayName = 'proto.txpull.v1.unpack.YulDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.unpack.OptimizerDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.txpull.v1.unpack.OptimizerDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.unpack.OptimizerDetails.displayName = 'proto.txpull.v1.unpack.OptimizerDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.unpack.Optimizer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.txpull.v1.unpack.Optimizer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.unpack.Optimizer.displayName = 'proto.txpull.v1.unpack.Optimizer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.unpack.SourceDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.txpull.v1.unpack.SourceDetails.repeatedFields_, null);
};
goog.inherits(proto.txpull.v1.unpack.SourceDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.unpack.SourceDetails.displayName = 'proto.txpull.v1.unpack.SourceDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.unpack.Source = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.txpull.v1.unpack.Source, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.unpack.Source.displayName = 'proto.txpull.v1.unpack.Source';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.unpack.Company = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.txpull.v1.unpack.Company, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.unpack.Company.displayName = 'proto.txpull.v1.unpack.Company';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.unpack.Social = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.txpull.v1.unpack.Social.repeatedFields_, null);
};
goog.inherits(proto.txpull.v1.unpack.Social, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.unpack.Social.displayName = 'proto.txpull.v1.unpack.Social';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.unpack.SyntaxError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.txpull.v1.unpack.SyntaxError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.unpack.SyntaxError.displayName = 'proto.txpull.v1.unpack.SyntaxError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.unpack.ConstructorArgument = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.txpull.v1.unpack.ConstructorArgument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.unpack.ConstructorArgument.displayName = 'proto.txpull.v1.unpack.ConstructorArgument';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.unpack.Constructor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.txpull.v1.unpack.Constructor.repeatedFields_, null);
};
goog.inherits(proto.txpull.v1.unpack.Constructor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.unpack.Constructor.displayName = 'proto.txpull.v1.unpack.Constructor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.unpack.Contract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.txpull.v1.unpack.Contract.repeatedFields_, null);
};
goog.inherits(proto.txpull.v1.unpack.Contract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.unpack.Contract.displayName = 'proto.txpull.v1.unpack.Contract';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.txpull.v1.unpack.Metadata.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.unpack.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.unpack.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.unpack.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    license: jspb.Message.getFieldWithDefault(msg, 1, ""),
    compilerVersionRaw: jspb.Message.getFieldWithDefault(msg, 2, ""),
    compilerVersion: jspb.Message.getFieldWithDefault(msg, 3, ""),
    evmVersion: jspb.Message.getFieldWithDefault(msg, 4, ""),
    language: jspb.Message.getFieldWithDefault(msg, 5, 0),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    cborEncoded: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    cborRawMetadata: msg.getCborRawMetadata_asB64(),
    cborLength: jspb.Message.getFieldWithDefault(msg, 9, 0),
    ipfs: jspb.Message.getFieldWithDefault(msg, 10, ""),
    bzzr0: jspb.Message.getFieldWithDefault(msg, 11, ""),
    bzzr1: jspb.Message.getFieldWithDefault(msg, 12, ""),
    remappingsList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    isProxy: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    proxyConfidence: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.unpack.Metadata}
 */
proto.txpull.v1.unpack.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.unpack.Metadata;
  return proto.txpull.v1.unpack.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.unpack.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.unpack.Metadata}
 */
proto.txpull.v1.unpack.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicense(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompilerVersionRaw(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompilerVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvmVersion(value);
      break;
    case 5:
      var value = /** @type {!proto.txpull.v1.unpack.ContractLanguage} */ (reader.readEnum());
      msg.setLanguage(value);
      break;
    case 6:
      var value = /** @type {!proto.txpull.v1.unpack.ContractType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCborEncoded(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCborRawMetadata(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCborLength(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpfs(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBzzr0(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setBzzr1(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addRemappings(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsProxy(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setProxyConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.unpack.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.unpack.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLicense();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCompilerVersionRaw();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompilerVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEvmVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLanguage();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getCborEncoded();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getCborRawMetadata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = message.getCborLength();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getIpfs();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBzzr0();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getBzzr1();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getRemappingsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = message.getIsProxy();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getProxyConfidence();
  if (f !== 0) {
    writer.writeUint32(
      15,
      f
    );
  }
};


/**
 * optional string license = 1;
 * @return {string}
 */
proto.txpull.v1.unpack.Metadata.prototype.getLicense = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setLicense = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string compiler_version_raw = 2;
 * @return {string}
 */
proto.txpull.v1.unpack.Metadata.prototype.getCompilerVersionRaw = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setCompilerVersionRaw = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string compiler_version = 3;
 * @return {string}
 */
proto.txpull.v1.unpack.Metadata.prototype.getCompilerVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setCompilerVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string evm_version = 4;
 * @return {string}
 */
proto.txpull.v1.unpack.Metadata.prototype.getEvmVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setEvmVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ContractLanguage language = 5;
 * @return {!proto.txpull.v1.unpack.ContractLanguage}
 */
proto.txpull.v1.unpack.Metadata.prototype.getLanguage = function() {
  return /** @type {!proto.txpull.v1.unpack.ContractLanguage} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.txpull.v1.unpack.ContractLanguage} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional ContractType type = 6;
 * @return {!proto.txpull.v1.unpack.ContractType}
 */
proto.txpull.v1.unpack.Metadata.prototype.getType = function() {
  return /** @type {!proto.txpull.v1.unpack.ContractType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.txpull.v1.unpack.ContractType} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional bool cbor_encoded = 7;
 * @return {boolean}
 */
proto.txpull.v1.unpack.Metadata.prototype.getCborEncoded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setCborEncoded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bytes cbor_raw_metadata = 8;
 * @return {!(string|Uint8Array)}
 */
proto.txpull.v1.unpack.Metadata.prototype.getCborRawMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes cbor_raw_metadata = 8;
 * This is a type-conversion wrapper around `getCborRawMetadata()`
 * @return {string}
 */
proto.txpull.v1.unpack.Metadata.prototype.getCborRawMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCborRawMetadata()));
};


/**
 * optional bytes cbor_raw_metadata = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCborRawMetadata()`
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.Metadata.prototype.getCborRawMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCborRawMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setCborRawMetadata = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};


/**
 * optional int32 cbor_length = 9;
 * @return {number}
 */
proto.txpull.v1.unpack.Metadata.prototype.getCborLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setCborLength = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string ipfs = 10;
 * @return {string}
 */
proto.txpull.v1.unpack.Metadata.prototype.getIpfs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setIpfs = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string bzzr0 = 11;
 * @return {string}
 */
proto.txpull.v1.unpack.Metadata.prototype.getBzzr0 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setBzzr0 = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string bzzr1 = 12;
 * @return {string}
 */
proto.txpull.v1.unpack.Metadata.prototype.getBzzr1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setBzzr1 = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated string remappings = 13;
 * @return {!Array<string>}
 */
proto.txpull.v1.unpack.Metadata.prototype.getRemappingsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setRemappingsList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.addRemappings = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.clearRemappingsList = function() {
  return this.setRemappingsList([]);
};


/**
 * optional bool is_proxy = 14;
 * @return {boolean}
 */
proto.txpull.v1.unpack.Metadata.prototype.getIsProxy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setIsProxy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional uint32 proxy_confidence = 15;
 * @return {number}
 */
proto.txpull.v1.unpack.Metadata.prototype.getProxyConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.unpack.Metadata} returns this
 */
proto.txpull.v1.unpack.Metadata.prototype.setProxyConfidence = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.unpack.YulDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.unpack.YulDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.unpack.YulDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.YulDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    stackAllocation: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    optimizerSteps: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.unpack.YulDetails}
 */
proto.txpull.v1.unpack.YulDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.unpack.YulDetails;
  return proto.txpull.v1.unpack.YulDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.unpack.YulDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.unpack.YulDetails}
 */
proto.txpull.v1.unpack.YulDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStackAllocation(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOptimizerSteps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.YulDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.unpack.YulDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.unpack.YulDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.YulDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStackAllocation();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getOptimizerSteps();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional bool stack_allocation = 1;
 * @return {boolean}
 */
proto.txpull.v1.unpack.YulDetails.prototype.getStackAllocation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.YulDetails} returns this
 */
proto.txpull.v1.unpack.YulDetails.prototype.setStackAllocation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 optimizer_steps = 2;
 * @return {number}
 */
proto.txpull.v1.unpack.YulDetails.prototype.getOptimizerSteps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.unpack.YulDetails} returns this
 */
proto.txpull.v1.unpack.YulDetails.prototype.setOptimizerSteps = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.unpack.OptimizerDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.unpack.OptimizerDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.OptimizerDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    peephole: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    inliner: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    jumpdestRemover: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    orderLiterals: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    deduplicate: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    cse: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    constantOptimizer: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    yul: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    yulDetails: (f = msg.getYulDetails()) && proto.txpull.v1.unpack.YulDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.unpack.OptimizerDetails}
 */
proto.txpull.v1.unpack.OptimizerDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.unpack.OptimizerDetails;
  return proto.txpull.v1.unpack.OptimizerDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.unpack.OptimizerDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.unpack.OptimizerDetails}
 */
proto.txpull.v1.unpack.OptimizerDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPeephole(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInliner(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJumpdestRemover(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOrderLiterals(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeduplicate(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCse(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConstantOptimizer(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setYul(value);
      break;
    case 9:
      var value = new proto.txpull.v1.unpack.YulDetails;
      reader.readMessage(value,proto.txpull.v1.unpack.YulDetails.deserializeBinaryFromReader);
      msg.setYulDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.unpack.OptimizerDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.unpack.OptimizerDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.OptimizerDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeephole();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getInliner();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getJumpdestRemover();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getOrderLiterals();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDeduplicate();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCse();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getConstantOptimizer();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getYul();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getYulDetails();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.txpull.v1.unpack.YulDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool peephole = 1;
 * @return {boolean}
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.getPeephole = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.OptimizerDetails} returns this
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.setPeephole = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool inliner = 2;
 * @return {boolean}
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.getInliner = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.OptimizerDetails} returns this
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.setInliner = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool jumpdest_remover = 3;
 * @return {boolean}
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.getJumpdestRemover = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.OptimizerDetails} returns this
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.setJumpdestRemover = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool order_literals = 4;
 * @return {boolean}
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.getOrderLiterals = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.OptimizerDetails} returns this
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.setOrderLiterals = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool deduplicate = 5;
 * @return {boolean}
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.getDeduplicate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.OptimizerDetails} returns this
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.setDeduplicate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool cse = 6;
 * @return {boolean}
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.getCse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.OptimizerDetails} returns this
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.setCse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool constant_optimizer = 7;
 * @return {boolean}
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.getConstantOptimizer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.OptimizerDetails} returns this
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.setConstantOptimizer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool yul = 8;
 * @return {boolean}
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.getYul = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.OptimizerDetails} returns this
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.setYul = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional YulDetails yul_details = 9;
 * @return {?proto.txpull.v1.unpack.YulDetails}
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.getYulDetails = function() {
  return /** @type{?proto.txpull.v1.unpack.YulDetails} */ (
    jspb.Message.getWrapperField(this, proto.txpull.v1.unpack.YulDetails, 9));
};


/**
 * @param {?proto.txpull.v1.unpack.YulDetails|undefined} value
 * @return {!proto.txpull.v1.unpack.OptimizerDetails} returns this
*/
proto.txpull.v1.unpack.OptimizerDetails.prototype.setYulDetails = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.unpack.OptimizerDetails} returns this
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.clearYulDetails = function() {
  return this.setYulDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.unpack.OptimizerDetails.prototype.hasYulDetails = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.unpack.Optimizer.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.unpack.Optimizer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.unpack.Optimizer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Optimizer.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    runs: jspb.Message.getFieldWithDefault(msg, 2, 0),
    details: (f = msg.getDetails()) && proto.txpull.v1.unpack.OptimizerDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.unpack.Optimizer}
 */
proto.txpull.v1.unpack.Optimizer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.unpack.Optimizer;
  return proto.txpull.v1.unpack.Optimizer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.unpack.Optimizer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.unpack.Optimizer}
 */
proto.txpull.v1.unpack.Optimizer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRuns(value);
      break;
    case 3:
      var value = new proto.txpull.v1.unpack.OptimizerDetails;
      reader.readMessage(value,proto.txpull.v1.unpack.OptimizerDetails.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.Optimizer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.unpack.Optimizer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.unpack.Optimizer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Optimizer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRuns();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.txpull.v1.unpack.OptimizerDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.txpull.v1.unpack.Optimizer.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.Optimizer} returns this
 */
proto.txpull.v1.unpack.Optimizer.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 runs = 2;
 * @return {number}
 */
proto.txpull.v1.unpack.Optimizer.prototype.getRuns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.unpack.Optimizer} returns this
 */
proto.txpull.v1.unpack.Optimizer.prototype.setRuns = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional OptimizerDetails details = 3;
 * @return {?proto.txpull.v1.unpack.OptimizerDetails}
 */
proto.txpull.v1.unpack.Optimizer.prototype.getDetails = function() {
  return /** @type{?proto.txpull.v1.unpack.OptimizerDetails} */ (
    jspb.Message.getWrapperField(this, proto.txpull.v1.unpack.OptimizerDetails, 3));
};


/**
 * @param {?proto.txpull.v1.unpack.OptimizerDetails|undefined} value
 * @return {!proto.txpull.v1.unpack.Optimizer} returns this
*/
proto.txpull.v1.unpack.Optimizer.prototype.setDetails = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.unpack.Optimizer} returns this
 */
proto.txpull.v1.unpack.Optimizer.prototype.clearDetails = function() {
  return this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.unpack.Optimizer.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.txpull.v1.unpack.SourceDetails.repeatedFields_ = [1,2,3,4,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.unpack.SourceDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.unpack.SourceDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.unpack.SourceDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.SourceDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    commentsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    pragmasList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    importsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    inheritsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    isInterface: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    isLibrary: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isAbstract: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    isContract: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    syntaxErrorsList: jspb.Message.toObjectList(msg.getSyntaxErrorsList(),
    proto.txpull.v1.unpack.SyntaxError.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.unpack.SourceDetails}
 */
proto.txpull.v1.unpack.SourceDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.unpack.SourceDetails;
  return proto.txpull.v1.unpack.SourceDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.unpack.SourceDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.unpack.SourceDetails}
 */
proto.txpull.v1.unpack.SourceDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addComments(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPragmas(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addImports(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addInherits(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsInterface(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLibrary(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAbstract(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsContract(value);
      break;
    case 9:
      var value = new proto.txpull.v1.unpack.SyntaxError;
      reader.readMessage(value,proto.txpull.v1.unpack.SyntaxError.deserializeBinaryFromReader);
      msg.addSyntaxErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.SourceDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.unpack.SourceDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.unpack.SourceDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.SourceDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommentsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getPragmasList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getImportsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getInheritsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getIsInterface();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsLibrary();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsAbstract();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getIsContract();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getSyntaxErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.txpull.v1.unpack.SyntaxError.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string comments = 1;
 * @return {!Array<string>}
 */
proto.txpull.v1.unpack.SourceDetails.prototype.getCommentsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.setCommentsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.addComments = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.clearCommentsList = function() {
  return this.setCommentsList([]);
};


/**
 * repeated string pragmas = 2;
 * @return {!Array<string>}
 */
proto.txpull.v1.unpack.SourceDetails.prototype.getPragmasList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.setPragmasList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.addPragmas = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.clearPragmasList = function() {
  return this.setPragmasList([]);
};


/**
 * repeated string imports = 3;
 * @return {!Array<string>}
 */
proto.txpull.v1.unpack.SourceDetails.prototype.getImportsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.setImportsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.addImports = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.clearImportsList = function() {
  return this.setImportsList([]);
};


/**
 * repeated string inherits = 4;
 * @return {!Array<string>}
 */
proto.txpull.v1.unpack.SourceDetails.prototype.getInheritsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.setInheritsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.addInherits = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.clearInheritsList = function() {
  return this.setInheritsList([]);
};


/**
 * optional bool is_interface = 5;
 * @return {boolean}
 */
proto.txpull.v1.unpack.SourceDetails.prototype.getIsInterface = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.setIsInterface = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool is_library = 6;
 * @return {boolean}
 */
proto.txpull.v1.unpack.SourceDetails.prototype.getIsLibrary = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.setIsLibrary = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool is_abstract = 7;
 * @return {boolean}
 */
proto.txpull.v1.unpack.SourceDetails.prototype.getIsAbstract = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.setIsAbstract = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool is_contract = 8;
 * @return {boolean}
 */
proto.txpull.v1.unpack.SourceDetails.prototype.getIsContract = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.setIsContract = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * repeated SyntaxError syntax_errors = 9;
 * @return {!Array<!proto.txpull.v1.unpack.SyntaxError>}
 */
proto.txpull.v1.unpack.SourceDetails.prototype.getSyntaxErrorsList = function() {
  return /** @type{!Array<!proto.txpull.v1.unpack.SyntaxError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.txpull.v1.unpack.SyntaxError, 9));
};


/**
 * @param {!Array<!proto.txpull.v1.unpack.SyntaxError>} value
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
*/
proto.txpull.v1.unpack.SourceDetails.prototype.setSyntaxErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.txpull.v1.unpack.SyntaxError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.unpack.SyntaxError}
 */
proto.txpull.v1.unpack.SourceDetails.prototype.addSyntaxErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.txpull.v1.unpack.SyntaxError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.unpack.SourceDetails} returns this
 */
proto.txpull.v1.unpack.SourceDetails.prototype.clearSyntaxErrorsList = function() {
  return this.setSyntaxErrorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.unpack.Source.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.unpack.Source.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.unpack.Source} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Source.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    path: jspb.Message.getFieldWithDefault(msg, 3, ""),
    license: jspb.Message.getFieldWithDefault(msg, 4, ""),
    source: jspb.Message.getFieldWithDefault(msg, 5, ""),
    entrypoint: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    abi: jspb.Message.getFieldWithDefault(msg, 7, ""),
    ast: jspb.Message.getFieldWithDefault(msg, 8, ""),
    details: (f = msg.getDetails()) && proto.txpull.v1.unpack.SourceDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.unpack.Source}
 */
proto.txpull.v1.unpack.Source.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.unpack.Source;
  return proto.txpull.v1.unpack.Source.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.unpack.Source} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.unpack.Source}
 */
proto.txpull.v1.unpack.Source.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicense(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEntrypoint(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbi(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAst(value);
      break;
    case 13:
      var value = new proto.txpull.v1.unpack.SourceDetails;
      reader.readMessage(value,proto.txpull.v1.unpack.SourceDetails.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.Source.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.unpack.Source.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.unpack.Source} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Source.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLicense();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEntrypoint();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getAbi();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAst();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.txpull.v1.unpack.SourceDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.txpull.v1.unpack.Source.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Source} returns this
 */
proto.txpull.v1.unpack.Source.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.txpull.v1.unpack.Source.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Source} returns this
 */
proto.txpull.v1.unpack.Source.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string path = 3;
 * @return {string}
 */
proto.txpull.v1.unpack.Source.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Source} returns this
 */
proto.txpull.v1.unpack.Source.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string license = 4;
 * @return {string}
 */
proto.txpull.v1.unpack.Source.prototype.getLicense = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Source} returns this
 */
proto.txpull.v1.unpack.Source.prototype.setLicense = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string source = 5;
 * @return {string}
 */
proto.txpull.v1.unpack.Source.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Source} returns this
 */
proto.txpull.v1.unpack.Source.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool entrypoint = 6;
 * @return {boolean}
 */
proto.txpull.v1.unpack.Source.prototype.getEntrypoint = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.Source} returns this
 */
proto.txpull.v1.unpack.Source.prototype.setEntrypoint = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string abi = 7;
 * @return {string}
 */
proto.txpull.v1.unpack.Source.prototype.getAbi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Source} returns this
 */
proto.txpull.v1.unpack.Source.prototype.setAbi = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string ast = 8;
 * @return {string}
 */
proto.txpull.v1.unpack.Source.prototype.getAst = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Source} returns this
 */
proto.txpull.v1.unpack.Source.prototype.setAst = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional SourceDetails details = 13;
 * @return {?proto.txpull.v1.unpack.SourceDetails}
 */
proto.txpull.v1.unpack.Source.prototype.getDetails = function() {
  return /** @type{?proto.txpull.v1.unpack.SourceDetails} */ (
    jspb.Message.getWrapperField(this, proto.txpull.v1.unpack.SourceDetails, 13));
};


/**
 * @param {?proto.txpull.v1.unpack.SourceDetails|undefined} value
 * @return {!proto.txpull.v1.unpack.Source} returns this
*/
proto.txpull.v1.unpack.Source.prototype.setDetails = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.unpack.Source} returns this
 */
proto.txpull.v1.unpack.Source.prototype.clearDetails = function() {
  return this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.unpack.Source.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.unpack.Company.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.unpack.Company.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.unpack.Company} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Company.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, ""),
    country: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.unpack.Company}
 */
proto.txpull.v1.unpack.Company.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.unpack.Company;
  return proto.txpull.v1.unpack.Company.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.unpack.Company} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.unpack.Company}
 */
proto.txpull.v1.unpack.Company.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.Company.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.unpack.Company.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.unpack.Company} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Company.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.txpull.v1.unpack.Company.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Company} returns this
 */
proto.txpull.v1.unpack.Company.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.txpull.v1.unpack.Company.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Company} returns this
 */
proto.txpull.v1.unpack.Company.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string country = 3;
 * @return {string}
 */
proto.txpull.v1.unpack.Company.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Company} returns this
 */
proto.txpull.v1.unpack.Company.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.txpull.v1.unpack.Social.repeatedFields_ = [22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.unpack.Social.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.unpack.Social.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.unpack.Social} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Social.toObject = function(includeInstance, msg) {
  var f, obj = {
    twitter: jspb.Message.getFieldWithDefault(msg, 1, ""),
    github: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reddit: jspb.Message.getFieldWithDefault(msg, 3, ""),
    slack: jspb.Message.getFieldWithDefault(msg, 4, ""),
    discord: jspb.Message.getFieldWithDefault(msg, 5, ""),
    telegram: jspb.Message.getFieldWithDefault(msg, 6, ""),
    website: jspb.Message.getFieldWithDefault(msg, 7, ""),
    email: jspb.Message.getFieldWithDefault(msg, 8, ""),
    medium: jspb.Message.getFieldWithDefault(msg, 9, ""),
    linkedin: jspb.Message.getFieldWithDefault(msg, 10, ""),
    facebook: jspb.Message.getFieldWithDefault(msg, 11, ""),
    youtube: jspb.Message.getFieldWithDefault(msg, 12, ""),
    instagram: jspb.Message.getFieldWithDefault(msg, 13, ""),
    whatsapp: jspb.Message.getFieldWithDefault(msg, 14, ""),
    viber: jspb.Message.getFieldWithDefault(msg, 15, ""),
    snapchat: jspb.Message.getFieldWithDefault(msg, 16, ""),
    tiktok: jspb.Message.getFieldWithDefault(msg, 17, ""),
    pinterest: jspb.Message.getFieldWithDefault(msg, 18, ""),
    tumblr: jspb.Message.getFieldWithDefault(msg, 19, ""),
    twitch: jspb.Message.getFieldWithDefault(msg, 20, ""),
    cohost: jspb.Message.getFieldWithDefault(msg, 21, ""),
    companiesList: jspb.Message.toObjectList(msg.getCompaniesList(),
    proto.txpull.v1.unpack.Company.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.unpack.Social}
 */
proto.txpull.v1.unpack.Social.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.unpack.Social;
  return proto.txpull.v1.unpack.Social.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.unpack.Social} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.unpack.Social}
 */
proto.txpull.v1.unpack.Social.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTwitter(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGithub(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReddit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlack(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiscord(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelegram(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsite(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMedium(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkedin(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setFacebook(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setYoutube(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstagram(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setWhatsapp(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setViber(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnapchat(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setTiktok(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setPinterest(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setTumblr(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setTwitch(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setCohost(value);
      break;
    case 22:
      var value = new proto.txpull.v1.unpack.Company;
      reader.readMessage(value,proto.txpull.v1.unpack.Company.deserializeBinaryFromReader);
      msg.addCompanies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.Social.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.unpack.Social.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.unpack.Social} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Social.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwitter();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGithub();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReddit();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSlack();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDiscord();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTelegram();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWebsite();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMedium();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLinkedin();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getFacebook();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getYoutube();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getInstagram();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getWhatsapp();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getViber();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getSnapchat();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getTiktok();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getPinterest();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getTumblr();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getTwitch();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getCohost();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getCompaniesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.txpull.v1.unpack.Company.serializeBinaryToWriter
    );
  }
};


/**
 * optional string twitter = 1;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getTwitter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setTwitter = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string github = 2;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getGithub = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setGithub = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string reddit = 3;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getReddit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setReddit = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string slack = 4;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getSlack = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setSlack = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string discord = 5;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getDiscord = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setDiscord = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string telegram = 6;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getTelegram = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setTelegram = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string website = 7;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getWebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setWebsite = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string email = 8;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string medium = 9;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getMedium = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setMedium = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string linkedin = 10;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getLinkedin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setLinkedin = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string facebook = 11;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getFacebook = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setFacebook = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string youtube = 12;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getYoutube = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setYoutube = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string instagram = 13;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getInstagram = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setInstagram = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string whatsapp = 14;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getWhatsapp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setWhatsapp = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string viber = 15;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getViber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setViber = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string snapchat = 16;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getSnapchat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setSnapchat = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string tiktok = 17;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getTiktok = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setTiktok = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string pinterest = 18;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getPinterest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setPinterest = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string tumblr = 19;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getTumblr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setTumblr = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string twitch = 20;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getTwitch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setTwitch = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string cohost = 21;
 * @return {string}
 */
proto.txpull.v1.unpack.Social.prototype.getCohost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.setCohost = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * repeated Company companies = 22;
 * @return {!Array<!proto.txpull.v1.unpack.Company>}
 */
proto.txpull.v1.unpack.Social.prototype.getCompaniesList = function() {
  return /** @type{!Array<!proto.txpull.v1.unpack.Company>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.txpull.v1.unpack.Company, 22));
};


/**
 * @param {!Array<!proto.txpull.v1.unpack.Company>} value
 * @return {!proto.txpull.v1.unpack.Social} returns this
*/
proto.txpull.v1.unpack.Social.prototype.setCompaniesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.txpull.v1.unpack.Company=} opt_value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.unpack.Company}
 */
proto.txpull.v1.unpack.Social.prototype.addCompanies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.txpull.v1.unpack.Company, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.unpack.Social} returns this
 */
proto.txpull.v1.unpack.Social.prototype.clearCompaniesList = function() {
  return this.setCompaniesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.unpack.SyntaxError.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.unpack.SyntaxError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.unpack.SyntaxError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.SyntaxError.toObject = function(includeInstance, msg) {
  var f, obj = {
    line: jspb.Message.getFieldWithDefault(msg, 1, 0),
    column: jspb.Message.getFieldWithDefault(msg, 2, 0),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    severity: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.unpack.SyntaxError}
 */
proto.txpull.v1.unpack.SyntaxError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.unpack.SyntaxError;
  return proto.txpull.v1.unpack.SyntaxError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.unpack.SyntaxError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.unpack.SyntaxError}
 */
proto.txpull.v1.unpack.SyntaxError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLine(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColumn(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeverity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.SyntaxError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.unpack.SyntaxError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.unpack.SyntaxError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.SyntaxError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLine();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getColumn();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSeverity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 line = 1;
 * @return {number}
 */
proto.txpull.v1.unpack.SyntaxError.prototype.getLine = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.unpack.SyntaxError} returns this
 */
proto.txpull.v1.unpack.SyntaxError.prototype.setLine = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 column = 2;
 * @return {number}
 */
proto.txpull.v1.unpack.SyntaxError.prototype.getColumn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.unpack.SyntaxError} returns this
 */
proto.txpull.v1.unpack.SyntaxError.prototype.setColumn = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.txpull.v1.unpack.SyntaxError.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.SyntaxError} returns this
 */
proto.txpull.v1.unpack.SyntaxError.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string severity = 4;
 * @return {string}
 */
proto.txpull.v1.unpack.SyntaxError.prototype.getSeverity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.SyntaxError} returns this
 */
proto.txpull.v1.unpack.SyntaxError.prototype.setSeverity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.unpack.ConstructorArgument.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.unpack.ConstructorArgument.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.unpack.ConstructorArgument} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.ConstructorArgument.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    indexed: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.unpack.ConstructorArgument}
 */
proto.txpull.v1.unpack.ConstructorArgument.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.unpack.ConstructorArgument;
  return proto.txpull.v1.unpack.ConstructorArgument.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.unpack.ConstructorArgument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.unpack.ConstructorArgument}
 */
proto.txpull.v1.unpack.ConstructorArgument.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIndexed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.ConstructorArgument.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.unpack.ConstructorArgument.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.unpack.ConstructorArgument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.ConstructorArgument.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIndexed();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.txpull.v1.unpack.ConstructorArgument.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.ConstructorArgument} returns this
 */
proto.txpull.v1.unpack.ConstructorArgument.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.txpull.v1.unpack.ConstructorArgument.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.ConstructorArgument} returns this
 */
proto.txpull.v1.unpack.ConstructorArgument.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.txpull.v1.unpack.ConstructorArgument.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.ConstructorArgument} returns this
 */
proto.txpull.v1.unpack.ConstructorArgument.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool indexed = 4;
 * @return {boolean}
 */
proto.txpull.v1.unpack.ConstructorArgument.prototype.getIndexed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.unpack.ConstructorArgument} returns this
 */
proto.txpull.v1.unpack.ConstructorArgument.prototype.setIndexed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.txpull.v1.unpack.Constructor.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.unpack.Constructor.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.unpack.Constructor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.unpack.Constructor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Constructor.toObject = function(includeInstance, msg) {
  var f, obj = {
    abi: jspb.Message.getFieldWithDefault(msg, 1, ""),
    signatureRaw: jspb.Message.getFieldWithDefault(msg, 2, ""),
    argumentsList: jspb.Message.toObjectList(msg.getArgumentsList(),
    proto.txpull.v1.unpack.ConstructorArgument.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.unpack.Constructor}
 */
proto.txpull.v1.unpack.Constructor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.unpack.Constructor;
  return proto.txpull.v1.unpack.Constructor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.unpack.Constructor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.unpack.Constructor}
 */
proto.txpull.v1.unpack.Constructor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbi(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignatureRaw(value);
      break;
    case 3:
      var value = new proto.txpull.v1.unpack.ConstructorArgument;
      reader.readMessage(value,proto.txpull.v1.unpack.ConstructorArgument.deserializeBinaryFromReader);
      msg.addArguments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.Constructor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.unpack.Constructor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.unpack.Constructor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Constructor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAbi();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSignatureRaw();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArgumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.txpull.v1.unpack.ConstructorArgument.serializeBinaryToWriter
    );
  }
};


/**
 * optional string abi = 1;
 * @return {string}
 */
proto.txpull.v1.unpack.Constructor.prototype.getAbi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Constructor} returns this
 */
proto.txpull.v1.unpack.Constructor.prototype.setAbi = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string signature_raw = 2;
 * @return {string}
 */
proto.txpull.v1.unpack.Constructor.prototype.getSignatureRaw = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Constructor} returns this
 */
proto.txpull.v1.unpack.Constructor.prototype.setSignatureRaw = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ConstructorArgument arguments = 3;
 * @return {!Array<!proto.txpull.v1.unpack.ConstructorArgument>}
 */
proto.txpull.v1.unpack.Constructor.prototype.getArgumentsList = function() {
  return /** @type{!Array<!proto.txpull.v1.unpack.ConstructorArgument>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.txpull.v1.unpack.ConstructorArgument, 3));
};


/**
 * @param {!Array<!proto.txpull.v1.unpack.ConstructorArgument>} value
 * @return {!proto.txpull.v1.unpack.Constructor} returns this
*/
proto.txpull.v1.unpack.Constructor.prototype.setArgumentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.txpull.v1.unpack.ConstructorArgument=} opt_value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.unpack.ConstructorArgument}
 */
proto.txpull.v1.unpack.Constructor.prototype.addArguments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.txpull.v1.unpack.ConstructorArgument, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.unpack.Constructor} returns this
 */
proto.txpull.v1.unpack.Constructor.prototype.clearArgumentsList = function() {
  return this.setArgumentsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.txpull.v1.unpack.Contract.repeatedFields_ = [22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.unpack.Contract.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.unpack.Contract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.unpack.Contract} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Contract.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    networkId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    blockNumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    blockHash: jspb.Message.getFieldWithDefault(msg, 6, ""),
    transactionHash: jspb.Message.getFieldWithDefault(msg, 7, ""),
    receiptStatus: jspb.Message.getFieldWithDefault(msg, 8, 0),
    metadata: (f = msg.getMetadata()) && proto.txpull.v1.unpack.Metadata.toObject(includeInstance, f),
    optimizer: (f = msg.getOptimizer()) && proto.txpull.v1.unpack.Optimizer.toObject(includeInstance, f),
    bytecode: msg.getBytecode_asB64(),
    bytecodeSize: jspb.Message.getFieldWithDefault(msg, 12, 0),
    creationBytecode: msg.getCreationBytecode_asB64(),
    creationBytecodeSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    gasUsed: jspb.Message.getFieldWithDefault(msg, 15, 0),
    effectiveGasPrice: jspb.Message.getFieldWithDefault(msg, 16, 0),
    verificationStatus: jspb.Message.getFieldWithDefault(msg, 17, 0),
    abi: jspb.Message.getFieldWithDefault(msg, 18, ""),
    sourceEntryPoint: jspb.Message.getFieldWithDefault(msg, 19, ""),
    compilationTargetsMap: (f = msg.getCompilationTargetsMap()) ? f.toObject(includeInstance, undefined) : [],
    constructor: (f = msg.getConstructor()) && proto.txpull.v1.unpack.Constructor.toObject(includeInstance, f),
    sourcesList: jspb.Message.toObjectList(msg.getSourcesList(),
    proto.txpull.v1.unpack.Source.toObject, includeInstance),
    social: (f = msg.getSocial()) && proto.txpull.v1.unpack.Social.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.unpack.Contract}
 */
proto.txpull.v1.unpack.Contract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.unpack.Contract;
  return proto.txpull.v1.unpack.Contract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.unpack.Contract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.unpack.Contract}
 */
proto.txpull.v1.unpack.Contract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNetworkId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlockNumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockHash(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionHash(value);
      break;
    case 8:
      var value = /** @type {!proto.txpull.v1.unpack.ReceiptStatus} */ (reader.readEnum());
      msg.setReceiptStatus(value);
      break;
    case 9:
      var value = new proto.txpull.v1.unpack.Metadata;
      reader.readMessage(value,proto.txpull.v1.unpack.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 10:
      var value = new proto.txpull.v1.unpack.Optimizer;
      reader.readMessage(value,proto.txpull.v1.unpack.Optimizer.deserializeBinaryFromReader);
      msg.setOptimizer(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytecode(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBytecodeSize(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCreationBytecode(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreationBytecodeSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGasUsed(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEffectiveGasPrice(value);
      break;
    case 17:
      var value = /** @type {!proto.txpull.v1.unpack.VerificationStatus} */ (reader.readEnum());
      msg.setVerificationStatus(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbi(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceEntryPoint(value);
      break;
    case 20:
      var value = msg.getCompilationTargetsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 21:
      var value = new proto.txpull.v1.unpack.Constructor;
      reader.readMessage(value,proto.txpull.v1.unpack.Constructor.deserializeBinaryFromReader);
      msg.setConstructor(value);
      break;
    case 22:
      var value = new proto.txpull.v1.unpack.Source;
      reader.readMessage(value,proto.txpull.v1.unpack.Source.deserializeBinaryFromReader);
      msg.addSources(value);
      break;
    case 23:
      var value = new proto.txpull.v1.unpack.Social;
      reader.readMessage(value,proto.txpull.v1.unpack.Social.deserializeBinaryFromReader);
      msg.setSocial(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.Contract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.unpack.Contract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.unpack.Contract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.unpack.Contract.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNetworkId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBlockNumber();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getBlockHash();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTransactionHash();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getReceiptStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.txpull.v1.unpack.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getOptimizer();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.txpull.v1.unpack.Optimizer.serializeBinaryToWriter
    );
  }
  f = message.getBytecode_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = message.getBytecodeSize();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getCreationBytecode_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = message.getCreationBytecodeSize();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getGasUsed();
  if (f !== 0) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getEffectiveGasPrice();
  if (f !== 0) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = message.getVerificationStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = message.getAbi();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getSourceEntryPoint();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getCompilationTargetsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(20, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getConstructor();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.txpull.v1.unpack.Constructor.serializeBinaryToWriter
    );
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.txpull.v1.unpack.Source.serializeBinaryToWriter
    );
  }
  f = message.getSocial();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.txpull.v1.unpack.Social.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.txpull.v1.unpack.Contract.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 network_id = 2;
 * @return {number}
 */
proto.txpull.v1.unpack.Contract.prototype.getNetworkId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setNetworkId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.txpull.v1.unpack.Contract.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.txpull.v1.unpack.Contract.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 block_number = 5;
 * @return {number}
 */
proto.txpull.v1.unpack.Contract.prototype.getBlockNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setBlockNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string block_hash = 6;
 * @return {string}
 */
proto.txpull.v1.unpack.Contract.prototype.getBlockHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setBlockHash = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string transaction_hash = 7;
 * @return {string}
 */
proto.txpull.v1.unpack.Contract.prototype.getTransactionHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setTransactionHash = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional ReceiptStatus receipt_status = 8;
 * @return {!proto.txpull.v1.unpack.ReceiptStatus}
 */
proto.txpull.v1.unpack.Contract.prototype.getReceiptStatus = function() {
  return /** @type {!proto.txpull.v1.unpack.ReceiptStatus} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.txpull.v1.unpack.ReceiptStatus} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setReceiptStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional Metadata metadata = 9;
 * @return {?proto.txpull.v1.unpack.Metadata}
 */
proto.txpull.v1.unpack.Contract.prototype.getMetadata = function() {
  return /** @type{?proto.txpull.v1.unpack.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.txpull.v1.unpack.Metadata, 9));
};


/**
 * @param {?proto.txpull.v1.unpack.Metadata|undefined} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
*/
proto.txpull.v1.unpack.Contract.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.unpack.Contract.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Optimizer optimizer = 10;
 * @return {?proto.txpull.v1.unpack.Optimizer}
 */
proto.txpull.v1.unpack.Contract.prototype.getOptimizer = function() {
  return /** @type{?proto.txpull.v1.unpack.Optimizer} */ (
    jspb.Message.getWrapperField(this, proto.txpull.v1.unpack.Optimizer, 10));
};


/**
 * @param {?proto.txpull.v1.unpack.Optimizer|undefined} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
*/
proto.txpull.v1.unpack.Contract.prototype.setOptimizer = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.clearOptimizer = function() {
  return this.setOptimizer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.unpack.Contract.prototype.hasOptimizer = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bytes bytecode = 11;
 * @return {!(string|Uint8Array)}
 */
proto.txpull.v1.unpack.Contract.prototype.getBytecode = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes bytecode = 11;
 * This is a type-conversion wrapper around `getBytecode()`
 * @return {string}
 */
proto.txpull.v1.unpack.Contract.prototype.getBytecode_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytecode()));
};


/**
 * optional bytes bytecode = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytecode()`
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.Contract.prototype.getBytecode_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytecode()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setBytecode = function(value) {
  return jspb.Message.setProto3BytesField(this, 11, value);
};


/**
 * optional int64 bytecode_size = 12;
 * @return {number}
 */
proto.txpull.v1.unpack.Contract.prototype.getBytecodeSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setBytecodeSize = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional bytes creation_bytecode = 13;
 * @return {!(string|Uint8Array)}
 */
proto.txpull.v1.unpack.Contract.prototype.getCreationBytecode = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes creation_bytecode = 13;
 * This is a type-conversion wrapper around `getCreationBytecode()`
 * @return {string}
 */
proto.txpull.v1.unpack.Contract.prototype.getCreationBytecode_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCreationBytecode()));
};


/**
 * optional bytes creation_bytecode = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCreationBytecode()`
 * @return {!Uint8Array}
 */
proto.txpull.v1.unpack.Contract.prototype.getCreationBytecode_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCreationBytecode()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setCreationBytecode = function(value) {
  return jspb.Message.setProto3BytesField(this, 13, value);
};


/**
 * optional int64 creation_bytecode_size = 14;
 * @return {number}
 */
proto.txpull.v1.unpack.Contract.prototype.getCreationBytecodeSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setCreationBytecodeSize = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional uint64 gas_used = 15;
 * @return {number}
 */
proto.txpull.v1.unpack.Contract.prototype.getGasUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setGasUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional uint64 effective_gas_price = 16;
 * @return {number}
 */
proto.txpull.v1.unpack.Contract.prototype.getEffectiveGasPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setEffectiveGasPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional VerificationStatus verification_status = 17;
 * @return {!proto.txpull.v1.unpack.VerificationStatus}
 */
proto.txpull.v1.unpack.Contract.prototype.getVerificationStatus = function() {
  return /** @type {!proto.txpull.v1.unpack.VerificationStatus} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.txpull.v1.unpack.VerificationStatus} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setVerificationStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 17, value);
};


/**
 * optional string abi = 18;
 * @return {string}
 */
proto.txpull.v1.unpack.Contract.prototype.getAbi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setAbi = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string source_entry_point = 19;
 * @return {string}
 */
proto.txpull.v1.unpack.Contract.prototype.getSourceEntryPoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.setSourceEntryPoint = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * map<string, string> compilation_targets = 20;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.txpull.v1.unpack.Contract.prototype.getCompilationTargetsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 20, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.clearCompilationTargetsMap = function() {
  this.getCompilationTargetsMap().clear();
  return this;};


/**
 * optional Constructor constructor = 21;
 * @return {?proto.txpull.v1.unpack.Constructor}
 */
proto.txpull.v1.unpack.Contract.prototype.getConstructor = function() {
  return /** @type{?proto.txpull.v1.unpack.Constructor} */ (
    jspb.Message.getWrapperField(this, proto.txpull.v1.unpack.Constructor, 21));
};


/**
 * @param {?proto.txpull.v1.unpack.Constructor|undefined} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
*/
proto.txpull.v1.unpack.Contract.prototype.setConstructor = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.clearConstructor = function() {
  return this.setConstructor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.unpack.Contract.prototype.hasConstructor = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * repeated Source sources = 22;
 * @return {!Array<!proto.txpull.v1.unpack.Source>}
 */
proto.txpull.v1.unpack.Contract.prototype.getSourcesList = function() {
  return /** @type{!Array<!proto.txpull.v1.unpack.Source>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.txpull.v1.unpack.Source, 22));
};


/**
 * @param {!Array<!proto.txpull.v1.unpack.Source>} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
*/
proto.txpull.v1.unpack.Contract.prototype.setSourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.txpull.v1.unpack.Source=} opt_value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.unpack.Source}
 */
proto.txpull.v1.unpack.Contract.prototype.addSources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.txpull.v1.unpack.Source, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.clearSourcesList = function() {
  return this.setSourcesList([]);
};


/**
 * optional Social social = 23;
 * @return {?proto.txpull.v1.unpack.Social}
 */
proto.txpull.v1.unpack.Contract.prototype.getSocial = function() {
  return /** @type{?proto.txpull.v1.unpack.Social} */ (
    jspb.Message.getWrapperField(this, proto.txpull.v1.unpack.Social, 23));
};


/**
 * @param {?proto.txpull.v1.unpack.Social|undefined} value
 * @return {!proto.txpull.v1.unpack.Contract} returns this
*/
proto.txpull.v1.unpack.Contract.prototype.setSocial = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.unpack.Contract} returns this
 */
proto.txpull.v1.unpack.Contract.prototype.clearSocial = function() {
  return this.setSocial(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.unpack.Contract.prototype.hasSocial = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * @enum {number}
 */
proto.txpull.v1.unpack.ReceiptStatus = {
  RS_UNKNOWN: 0,
  RS_SUCCESS: 1,
  RS_FAILURE: 2
};

/**
 * @enum {number}
 */
proto.txpull.v1.unpack.VerificationStatus = {
  VS_UNKNOWN: 0,
  VS_VERIFIED: 1,
  VS_PARTIAL: 2,
  VS_UNVERIFIED: 3
};

/**
 * @enum {number}
 */
proto.txpull.v1.unpack.ContractType = {
  CT_UNKNOWN: 0,
  CT_ERC20: 1,
  CT_ERC721: 2,
  CT_ERC1155: 3,
  CT_BEP20: 4,
  CT_BEP721: 5,
  CT_BEP1155: 6
};

/**
 * @enum {number}
 */
proto.txpull.v1.unpack.ContractLanguage = {
  CL_UNKNOWN: 0,
  CL_SOLIDITY: 1,
  CL_VYPER: 2,
  CL_OTHER: 3
};

goog.object.extend(exports, proto.txpull.v1.unpack);
