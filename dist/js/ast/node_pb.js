// source: ast/node.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var ast_types_pb = require('../ast/types_pb.js');
goog.object.extend(proto, ast_types_pb);
var ast_src_pb = require('../ast/src_pb.js');
goog.object.extend(proto, ast_src_pb);
var ast_parameters_pb = require('../ast/parameters_pb.js');
goog.object.extend(proto, ast_parameters_pb);
var ast_body_pb = require('../ast/body_pb.js');
goog.object.extend(proto, ast_body_pb);
goog.exportSymbol('proto.txpull.v1.ast.LibraryName', null, global);
goog.exportSymbol('proto.txpull.v1.ast.Node', null, global);
goog.exportSymbol('proto.txpull.v1.ast.RootNode', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.ast.LibraryName = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.txpull.v1.ast.LibraryName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.ast.LibraryName.displayName = 'proto.txpull.v1.ast.LibraryName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.ast.Node = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.txpull.v1.ast.Node.repeatedFields_, null);
};
goog.inherits(proto.txpull.v1.ast.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.ast.Node.displayName = 'proto.txpull.v1.ast.Node';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.ast.RootNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.txpull.v1.ast.RootNode.repeatedFields_, null);
};
goog.inherits(proto.txpull.v1.ast.RootNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.ast.RootNode.displayName = 'proto.txpull.v1.ast.RootNode';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.ast.LibraryName.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.ast.LibraryName.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.ast.LibraryName} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.ast.LibraryName.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nodeType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    referencedDeclaration: jspb.Message.getFieldWithDefault(msg, 4, 0),
    src: (f = msg.getSrc()) && ast_src_pb.Src.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.ast.LibraryName}
 */
proto.txpull.v1.ast.LibraryName.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.ast.LibraryName;
  return proto.txpull.v1.ast.LibraryName.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.ast.LibraryName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.ast.LibraryName}
 */
proto.txpull.v1.ast.LibraryName.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.txpull.v1.ast.NodeType} */ (reader.readEnum());
      msg.setNodeType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReferencedDeclaration(value);
      break;
    case 5:
      var value = new ast_src_pb.Src;
      reader.readMessage(value,ast_src_pb.Src.deserializeBinaryFromReader);
      msg.setSrc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.ast.LibraryName.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.ast.LibraryName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.ast.LibraryName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.ast.LibraryName.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNodeType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getReferencedDeclaration();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSrc();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      ast_src_pb.Src.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.txpull.v1.ast.LibraryName.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.ast.LibraryName} returns this
 */
proto.txpull.v1.ast.LibraryName.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.txpull.v1.ast.LibraryName.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.ast.LibraryName} returns this
 */
proto.txpull.v1.ast.LibraryName.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional NodeType node_type = 3;
 * @return {!proto.txpull.v1.ast.NodeType}
 */
proto.txpull.v1.ast.LibraryName.prototype.getNodeType = function() {
  return /** @type {!proto.txpull.v1.ast.NodeType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.txpull.v1.ast.NodeType} value
 * @return {!proto.txpull.v1.ast.LibraryName} returns this
 */
proto.txpull.v1.ast.LibraryName.prototype.setNodeType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int64 referenced_declaration = 4;
 * @return {number}
 */
proto.txpull.v1.ast.LibraryName.prototype.getReferencedDeclaration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.ast.LibraryName} returns this
 */
proto.txpull.v1.ast.LibraryName.prototype.setReferencedDeclaration = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Src src = 5;
 * @return {?proto.txpull.v1.ast.Src}
 */
proto.txpull.v1.ast.LibraryName.prototype.getSrc = function() {
  return /** @type{?proto.txpull.v1.ast.Src} */ (
    jspb.Message.getWrapperField(this, ast_src_pb.Src, 5));
};


/**
 * @param {?proto.txpull.v1.ast.Src|undefined} value
 * @return {!proto.txpull.v1.ast.LibraryName} returns this
*/
proto.txpull.v1.ast.LibraryName.prototype.setSrc = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.ast.LibraryName} returns this
 */
proto.txpull.v1.ast.LibraryName.prototype.clearSrc = function() {
  return this.setSrc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.ast.LibraryName.prototype.hasSrc = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.txpull.v1.ast.Node.repeatedFields_ = [9,10,11,22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.ast.Node.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.ast.Node.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.ast.Node} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.ast.Node.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nodeType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    src: (f = msg.getSrc()) && ast_src_pb.Src.toObject(includeInstance, f),
    pb_abstract: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    kind: jspb.Message.getFieldWithDefault(msg, 6, 0),
    fullyImplemented: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    implemented: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    linearizedBaseContractsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    literalsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.txpull.v1.ast.Node.toObject, includeInstance),
    visibility: jspb.Message.getFieldWithDefault(msg, 12, 0),
    stateMutability: jspb.Message.getFieldWithDefault(msg, 13, 0),
    virtual: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    parameters: (f = msg.getParameters()) && ast_parameters_pb.ParametersList.toObject(includeInstance, f),
    returnParameters: (f = msg.getReturnParameters()) && ast_parameters_pb.ParametersList.toObject(includeInstance, f),
    body: (f = msg.getBody()) && ast_body_pb.Body.toObject(includeInstance, f),
    absolutePath: jspb.Message.getFieldWithDefault(msg, 18, ""),
    file: jspb.Message.getFieldWithDefault(msg, 19, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 20, 0),
    sourceUnit: jspb.Message.getFieldWithDefault(msg, 21, 0),
    symbolAliasesList: (f = jspb.Message.getRepeatedField(msg, 22)) == null ? undefined : f,
    unitAlias: jspb.Message.getFieldWithDefault(msg, 23, ""),
    libraryName: (f = msg.getLibraryName()) && proto.txpull.v1.ast.LibraryName.toObject(includeInstance, f),
    typeName: (f = msg.getTypeName()) && ast_parameters_pb.TypeName.toObject(includeInstance, f),
    isConstant: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    isStateVariable: jspb.Message.getBooleanFieldWithDefault(msg, 27, false),
    typeDescriptions: (f = msg.getTypeDescriptions()) && ast_parameters_pb.TypeDescriptions.toObject(includeInstance, f),
    storageLocation: jspb.Message.getFieldWithDefault(msg, 29, 0),
    anonymous: jspb.Message.getBooleanFieldWithDefault(msg, 30, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.ast.Node}
 */
proto.txpull.v1.ast.Node.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.ast.Node;
  return proto.txpull.v1.ast.Node.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.ast.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.ast.Node}
 */
proto.txpull.v1.ast.Node.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.txpull.v1.ast.NodeType} */ (reader.readEnum());
      msg.setNodeType(value);
      break;
    case 4:
      var value = new ast_src_pb.Src;
      reader.readMessage(value,ast_src_pb.Src.deserializeBinaryFromReader);
      msg.setSrc(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAbstract(value);
      break;
    case 6:
      var value = /** @type {!proto.txpull.v1.ast.NodeType} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullyImplemented(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setImplemented(value);
      break;
    case 9:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setLinearizedBaseContractsList(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addLiterals(value);
      break;
    case 11:
      var value = new proto.txpull.v1.ast.Node;
      reader.readMessage(value,proto.txpull.v1.ast.Node.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    case 12:
      var value = /** @type {!proto.txpull.v1.ast.Visibility} */ (reader.readEnum());
      msg.setVisibility(value);
      break;
    case 13:
      var value = /** @type {!proto.txpull.v1.ast.Mutability} */ (reader.readEnum());
      msg.setStateMutability(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVirtual(value);
      break;
    case 15:
      var value = new ast_parameters_pb.ParametersList;
      reader.readMessage(value,ast_parameters_pb.ParametersList.deserializeBinaryFromReader);
      msg.setParameters(value);
      break;
    case 16:
      var value = new ast_parameters_pb.ParametersList;
      reader.readMessage(value,ast_parameters_pb.ParametersList.deserializeBinaryFromReader);
      msg.setReturnParameters(value);
      break;
    case 17:
      var value = new ast_body_pb.Body;
      reader.readMessage(value,ast_body_pb.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbsolutePath(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setFile(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScope(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSourceUnit(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.addSymbolAliases(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitAlias(value);
      break;
    case 24:
      var value = new proto.txpull.v1.ast.LibraryName;
      reader.readMessage(value,proto.txpull.v1.ast.LibraryName.deserializeBinaryFromReader);
      msg.setLibraryName(value);
      break;
    case 25:
      var value = new ast_parameters_pb.TypeName;
      reader.readMessage(value,ast_parameters_pb.TypeName.deserializeBinaryFromReader);
      msg.setTypeName(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsConstant(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsStateVariable(value);
      break;
    case 28:
      var value = new ast_parameters_pb.TypeDescriptions;
      reader.readMessage(value,ast_parameters_pb.TypeDescriptions.deserializeBinaryFromReader);
      msg.setTypeDescriptions(value);
      break;
    case 29:
      var value = /** @type {!proto.txpull.v1.ast.StorageLocation} */ (reader.readEnum());
      msg.setStorageLocation(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAnonymous(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.ast.Node.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.ast.Node.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.ast.Node} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.ast.Node.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNodeType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSrc();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      ast_src_pb.Src.serializeBinaryToWriter
    );
  }
  f = message.getAbstract();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getFullyImplemented();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getImplemented();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getLinearizedBaseContractsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      9,
      f
    );
  }
  f = message.getLiteralsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.txpull.v1.ast.Node.serializeBinaryToWriter
    );
  }
  f = message.getVisibility();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getStateMutability();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getVirtual();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getParameters();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      ast_parameters_pb.ParametersList.serializeBinaryToWriter
    );
  }
  f = message.getReturnParameters();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      ast_parameters_pb.ParametersList.serializeBinaryToWriter
    );
  }
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      ast_body_pb.Body.serializeBinaryToWriter
    );
  }
  f = message.getAbsolutePath();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getFile();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getScope();
  if (f !== 0) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = message.getSourceUnit();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = message.getSymbolAliasesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      22,
      f
    );
  }
  f = message.getUnitAlias();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getLibraryName();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.txpull.v1.ast.LibraryName.serializeBinaryToWriter
    );
  }
  f = message.getTypeName();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      ast_parameters_pb.TypeName.serializeBinaryToWriter
    );
  }
  f = message.getIsConstant();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
  f = message.getIsStateVariable();
  if (f) {
    writer.writeBool(
      27,
      f
    );
  }
  f = message.getTypeDescriptions();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      ast_parameters_pb.TypeDescriptions.serializeBinaryToWriter
    );
  }
  f = message.getStorageLocation();
  if (f !== 0.0) {
    writer.writeEnum(
      29,
      f
    );
  }
  f = message.getAnonymous();
  if (f) {
    writer.writeBool(
      30,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.txpull.v1.ast.Node.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.txpull.v1.ast.Node.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional NodeType node_type = 3;
 * @return {!proto.txpull.v1.ast.NodeType}
 */
proto.txpull.v1.ast.Node.prototype.getNodeType = function() {
  return /** @type {!proto.txpull.v1.ast.NodeType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.txpull.v1.ast.NodeType} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setNodeType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Src src = 4;
 * @return {?proto.txpull.v1.ast.Src}
 */
proto.txpull.v1.ast.Node.prototype.getSrc = function() {
  return /** @type{?proto.txpull.v1.ast.Src} */ (
    jspb.Message.getWrapperField(this, ast_src_pb.Src, 4));
};


/**
 * @param {?proto.txpull.v1.ast.Src|undefined} value
 * @return {!proto.txpull.v1.ast.Node} returns this
*/
proto.txpull.v1.ast.Node.prototype.setSrc = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.clearSrc = function() {
  return this.setSrc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.hasSrc = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool abstract = 5;
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.getAbstract = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setAbstract = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional NodeType kind = 6;
 * @return {!proto.txpull.v1.ast.NodeType}
 */
proto.txpull.v1.ast.Node.prototype.getKind = function() {
  return /** @type {!proto.txpull.v1.ast.NodeType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.txpull.v1.ast.NodeType} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional bool fully_implemented = 7;
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.getFullyImplemented = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setFullyImplemented = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool implemented = 8;
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.getImplemented = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setImplemented = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * repeated int64 linearized_base_contracts = 9;
 * @return {!Array<number>}
 */
proto.txpull.v1.ast.Node.prototype.getLinearizedBaseContractsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setLinearizedBaseContractsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.addLinearizedBaseContracts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.clearLinearizedBaseContractsList = function() {
  return this.setLinearizedBaseContractsList([]);
};


/**
 * repeated string literals = 10;
 * @return {!Array<string>}
 */
proto.txpull.v1.ast.Node.prototype.getLiteralsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setLiteralsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.addLiterals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.clearLiteralsList = function() {
  return this.setLiteralsList([]);
};


/**
 * repeated Node nodes = 11;
 * @return {!Array<!proto.txpull.v1.ast.Node>}
 */
proto.txpull.v1.ast.Node.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.txpull.v1.ast.Node>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.txpull.v1.ast.Node, 11));
};


/**
 * @param {!Array<!proto.txpull.v1.ast.Node>} value
 * @return {!proto.txpull.v1.ast.Node} returns this
*/
proto.txpull.v1.ast.Node.prototype.setNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.txpull.v1.ast.Node=} opt_value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.ast.Node}
 */
proto.txpull.v1.ast.Node.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.txpull.v1.ast.Node, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};


/**
 * optional Visibility visibility = 12;
 * @return {!proto.txpull.v1.ast.Visibility}
 */
proto.txpull.v1.ast.Node.prototype.getVisibility = function() {
  return /** @type {!proto.txpull.v1.ast.Visibility} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.txpull.v1.ast.Visibility} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setVisibility = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional Mutability state_mutability = 13;
 * @return {!proto.txpull.v1.ast.Mutability}
 */
proto.txpull.v1.ast.Node.prototype.getStateMutability = function() {
  return /** @type {!proto.txpull.v1.ast.Mutability} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.txpull.v1.ast.Mutability} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setStateMutability = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional bool virtual = 14;
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.getVirtual = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setVirtual = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional ParametersList parameters = 15;
 * @return {?proto.txpull.v1.ast.ParametersList}
 */
proto.txpull.v1.ast.Node.prototype.getParameters = function() {
  return /** @type{?proto.txpull.v1.ast.ParametersList} */ (
    jspb.Message.getWrapperField(this, ast_parameters_pb.ParametersList, 15));
};


/**
 * @param {?proto.txpull.v1.ast.ParametersList|undefined} value
 * @return {!proto.txpull.v1.ast.Node} returns this
*/
proto.txpull.v1.ast.Node.prototype.setParameters = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.clearParameters = function() {
  return this.setParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.hasParameters = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional ParametersList return_parameters = 16;
 * @return {?proto.txpull.v1.ast.ParametersList}
 */
proto.txpull.v1.ast.Node.prototype.getReturnParameters = function() {
  return /** @type{?proto.txpull.v1.ast.ParametersList} */ (
    jspb.Message.getWrapperField(this, ast_parameters_pb.ParametersList, 16));
};


/**
 * @param {?proto.txpull.v1.ast.ParametersList|undefined} value
 * @return {!proto.txpull.v1.ast.Node} returns this
*/
proto.txpull.v1.ast.Node.prototype.setReturnParameters = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.clearReturnParameters = function() {
  return this.setReturnParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.hasReturnParameters = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional Body body = 17;
 * @return {?proto.txpull.v1.ast.Body}
 */
proto.txpull.v1.ast.Node.prototype.getBody = function() {
  return /** @type{?proto.txpull.v1.ast.Body} */ (
    jspb.Message.getWrapperField(this, ast_body_pb.Body, 17));
};


/**
 * @param {?proto.txpull.v1.ast.Body|undefined} value
 * @return {!proto.txpull.v1.ast.Node} returns this
*/
proto.txpull.v1.ast.Node.prototype.setBody = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.clearBody = function() {
  return this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.hasBody = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string absolute_path = 18;
 * @return {string}
 */
proto.txpull.v1.ast.Node.prototype.getAbsolutePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setAbsolutePath = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string file = 19;
 * @return {string}
 */
proto.txpull.v1.ast.Node.prototype.getFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setFile = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional int64 scope = 20;
 * @return {number}
 */
proto.txpull.v1.ast.Node.prototype.getScope = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setScope = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int64 source_unit = 21;
 * @return {number}
 */
proto.txpull.v1.ast.Node.prototype.getSourceUnit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setSourceUnit = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * repeated string symbol_aliases = 22;
 * @return {!Array<string>}
 */
proto.txpull.v1.ast.Node.prototype.getSymbolAliasesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 22));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setSymbolAliasesList = function(value) {
  return jspb.Message.setField(this, 22, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.addSymbolAliases = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 22, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.clearSymbolAliasesList = function() {
  return this.setSymbolAliasesList([]);
};


/**
 * optional string unit_alias = 23;
 * @return {string}
 */
proto.txpull.v1.ast.Node.prototype.getUnitAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setUnitAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional LibraryName library_name = 24;
 * @return {?proto.txpull.v1.ast.LibraryName}
 */
proto.txpull.v1.ast.Node.prototype.getLibraryName = function() {
  return /** @type{?proto.txpull.v1.ast.LibraryName} */ (
    jspb.Message.getWrapperField(this, proto.txpull.v1.ast.LibraryName, 24));
};


/**
 * @param {?proto.txpull.v1.ast.LibraryName|undefined} value
 * @return {!proto.txpull.v1.ast.Node} returns this
*/
proto.txpull.v1.ast.Node.prototype.setLibraryName = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.clearLibraryName = function() {
  return this.setLibraryName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.hasLibraryName = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional TypeName type_name = 25;
 * @return {?proto.txpull.v1.ast.TypeName}
 */
proto.txpull.v1.ast.Node.prototype.getTypeName = function() {
  return /** @type{?proto.txpull.v1.ast.TypeName} */ (
    jspb.Message.getWrapperField(this, ast_parameters_pb.TypeName, 25));
};


/**
 * @param {?proto.txpull.v1.ast.TypeName|undefined} value
 * @return {!proto.txpull.v1.ast.Node} returns this
*/
proto.txpull.v1.ast.Node.prototype.setTypeName = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.clearTypeName = function() {
  return this.setTypeName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.hasTypeName = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional bool is_constant = 26;
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.getIsConstant = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setIsConstant = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};


/**
 * optional bool is_state_variable = 27;
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.getIsStateVariable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 27, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setIsStateVariable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 27, value);
};


/**
 * optional TypeDescriptions type_descriptions = 28;
 * @return {?proto.txpull.v1.ast.TypeDescriptions}
 */
proto.txpull.v1.ast.Node.prototype.getTypeDescriptions = function() {
  return /** @type{?proto.txpull.v1.ast.TypeDescriptions} */ (
    jspb.Message.getWrapperField(this, ast_parameters_pb.TypeDescriptions, 28));
};


/**
 * @param {?proto.txpull.v1.ast.TypeDescriptions|undefined} value
 * @return {!proto.txpull.v1.ast.Node} returns this
*/
proto.txpull.v1.ast.Node.prototype.setTypeDescriptions = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.clearTypeDescriptions = function() {
  return this.setTypeDescriptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.hasTypeDescriptions = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional StorageLocation storage_location = 29;
 * @return {!proto.txpull.v1.ast.StorageLocation}
 */
proto.txpull.v1.ast.Node.prototype.getStorageLocation = function() {
  return /** @type {!proto.txpull.v1.ast.StorageLocation} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {!proto.txpull.v1.ast.StorageLocation} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setStorageLocation = function(value) {
  return jspb.Message.setProto3EnumField(this, 29, value);
};


/**
 * optional bool anonymous = 30;
 * @return {boolean}
 */
proto.txpull.v1.ast.Node.prototype.getAnonymous = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.ast.Node} returns this
 */
proto.txpull.v1.ast.Node.prototype.setAnonymous = function(value) {
  return jspb.Message.setProto3BooleanField(this, 30, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.txpull.v1.ast.RootNode.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.ast.RootNode.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.ast.RootNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.ast.RootNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.ast.RootNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.txpull.v1.ast.Node.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.ast.RootNode}
 */
proto.txpull.v1.ast.RootNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.ast.RootNode;
  return proto.txpull.v1.ast.RootNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.ast.RootNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.ast.RootNode}
 */
proto.txpull.v1.ast.RootNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.txpull.v1.ast.Node;
      reader.readMessage(value,proto.txpull.v1.ast.Node.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.ast.RootNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.ast.RootNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.ast.RootNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.ast.RootNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.txpull.v1.ast.Node.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Node nodes = 1;
 * @return {!Array<!proto.txpull.v1.ast.Node>}
 */
proto.txpull.v1.ast.RootNode.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.txpull.v1.ast.Node>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.txpull.v1.ast.Node, 1));
};


/**
 * @param {!Array<!proto.txpull.v1.ast.Node>} value
 * @return {!proto.txpull.v1.ast.RootNode} returns this
*/
proto.txpull.v1.ast.RootNode.prototype.setNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.txpull.v1.ast.Node=} opt_value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.ast.Node}
 */
proto.txpull.v1.ast.RootNode.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.txpull.v1.ast.Node, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.ast.RootNode} returns this
 */
proto.txpull.v1.ast.RootNode.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};


goog.object.extend(exports, proto.txpull.v1.ast);
